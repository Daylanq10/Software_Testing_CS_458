//Test code generated by ISTA

using Blocks;
using System;

namespace test {

	public class BlockTester_RT{

		private Block block;
		
		public void Init() {
			block = new Block();
			block.GetClears().Add("B3");
			block.GetClears().Add("B6");
			block.GetOntables().Add("B3");
			block.GetOntables().Add("B6");
		}
		
		public void Init2() {
			block = new Block();
			block.GetClears().Add("B1");
			block.GetClears().Add("B6");
			block.GetOns().Add(new ON("B1", "B3"));
			block.GetOntables().Add("B3");
			block.GetOntables().Add("B6");
		}
		
		public void Init3() {
			block = new Block();
			block.GetClears().Add("B2");
			block.GetClears().Add("B5");
			block.GetOns().Add(new ON("B2", "B3"));
			block.GetOns().Add(new ON("B5", "B6"));
			block.GetOntables().Add("B3");
			block.GetOntables().Add("B6");
		}
		
		private void Assert(bool condition, string errorMessage) {
			if (!condition){
				Console.WriteLine(errorMessage);
				Console.WriteLine("\nPress any key to continue...");
				Console.Read();
				Environment.Exit(1);
			}
		}

		public void Test1() {
			Console.WriteLine("Test case 1");
			Init();
			block.Pickup("B3");
			Assert(block.IsClear("B6"), "1_1");
			Assert(block.IsHolding("B3"), "1_1");
			Assert(block.IsOntable("B6"), "1_1");
			block.Putdown("B3");
			Assert(block.IsClear("B3"), "1_1_1");
			Assert(block.IsClear("B6"), "1_1_1");
			Assert(block.IsOntable("B3"), "1_1_1");
			Assert(block.IsOntable("B6"), "1_1_1");
		}

		public void Test2() {
			Console.WriteLine("Test case 2");
			Init();
			block.Pickup("B3");
			block.Stack("B3", "B6");
			Assert(block.IsClear("B3"), "1_1_2");
			Assert(block.IsOn("B3", "B6"), "1_1_2");
			Assert(block.IsOntable("B6"), "1_1_2");
			block.Unstack("B3", "B6");
			Assert(block.IsClear("B6"), "1_1_2_1");
			Assert(block.IsHolding("B3"), "1_1_2_1");
			Assert(block.IsOntable("B6"), "1_1_2_1");
		}

		public void Test3() {
			Console.WriteLine("Test case 3");
			Init();
			block.Pickup("B6");
			Assert(block.IsClear("B3"), "1_2");
			Assert(block.IsHolding("B6"), "1_2");
			Assert(block.IsOntable("B3"), "1_2");
			block.Putdown("B6");
			Assert(block.IsClear("B3"), "1_2_1");
			Assert(block.IsClear("B6"), "1_2_1");
			Assert(block.IsOntable("B3"), "1_2_1");
			Assert(block.IsOntable("B6"), "1_2_1");
		}

		public void Test4() {
			Console.WriteLine("Test case 4");
			Init();
			block.Pickup("B6");
			block.Stack("B6", "B3");
			Assert(block.IsClear("B6"), "1_2_2");
			Assert(block.IsOn("B6", "B3"), "1_2_2");
			Assert(block.IsOntable("B3"), "1_2_2");
			block.Unstack("B6", "B3");
			Assert(block.IsClear("B3"), "1_2_2_1");
			Assert(block.IsHolding("B6"), "1_2_2_1");
			Assert(block.IsOntable("B3"), "1_2_2_1");
		}

		public void Test5() {
			Console.WriteLine("Test case 5");
			Init2();
			block.Pickup("B6");
			Assert(block.IsClear("B1"), "2_1");
			Assert(block.IsHolding("B6"), "2_1");
			Assert(block.IsOn("B1", "B3"), "2_1");
			Assert(block.IsOntable("B3"), "2_1");
			block.Putdown("B6");
			Assert(block.IsClear("B1"), "2_1_1");
			Assert(block.IsClear("B6"), "2_1_1");
			Assert(block.IsOn("B1", "B3"), "2_1_1");
			Assert(block.IsOntable("B3"), "2_1_1");
			Assert(block.IsOntable("B6"), "2_1_1");
		}

		public void Test6() {
			Console.WriteLine("Test case 6");
			Init2();
			block.Pickup("B6");
			block.Stack("B6", "B1");
			Assert(block.IsClear("B6"), "2_1_2");
			Assert(block.IsOn("B1", "B3"), "2_1_2");
			Assert(block.IsOn("B6", "B1"), "2_1_2");
			Assert(block.IsOntable("B3"), "2_1_2");
			block.Unstack("B6", "B1");
			Assert(block.IsClear("B1"), "2_1_2_1");
			Assert(block.IsHolding("B6"), "2_1_2_1");
			Assert(block.IsOn("B1", "B3"), "2_1_2_1");
			Assert(block.IsOntable("B3"), "2_1_2_1");
		}

		public void Test7() {
			Console.WriteLine("Test case 7");
			Init2();
			block.Unstack("B1", "B3");
			Assert(block.IsClear("B3"), "2_2");
			Assert(block.IsClear("B6"), "2_2");
			Assert(block.IsHolding("B1"), "2_2");
			Assert(block.IsOntable("B3"), "2_2");
			Assert(block.IsOntable("B6"), "2_2");
			block.Putdown("B1");
			Assert(block.IsClear("B1"), "2_2_1");
			Assert(block.IsClear("B3"), "2_2_1");
			Assert(block.IsClear("B6"), "2_2_1");
			Assert(block.IsOntable("B1"), "2_2_1");
			Assert(block.IsOntable("B3"), "2_2_1");
			Assert(block.IsOntable("B6"), "2_2_1");
			block.Pickup("B1");
			Assert(block.IsClear("B3"), "2_2_1_1");
			Assert(block.IsClear("B6"), "2_2_1_1");
			Assert(block.IsHolding("B1"), "2_2_1_1");
			Assert(block.IsOntable("B3"), "2_2_1_1");
			Assert(block.IsOntable("B6"), "2_2_1_1");
		}

		public void Test8() {
			Console.WriteLine("Test case 8");
			Init2();
			block.Unstack("B1", "B3");
			block.Putdown("B1");
			block.Pickup("B3");
			Assert(block.IsClear("B1"), "2_2_1_2");
			Assert(block.IsClear("B6"), "2_2_1_2");
			Assert(block.IsHolding("B3"), "2_2_1_2");
			Assert(block.IsOntable("B1"), "2_2_1_2");
			Assert(block.IsOntable("B6"), "2_2_1_2");
			block.Putdown("B3");
			Assert(block.IsClear("B1"), "2_2_1_2_1");
			Assert(block.IsClear("B3"), "2_2_1_2_1");
			Assert(block.IsClear("B6"), "2_2_1_2_1");
			Assert(block.IsOntable("B1"), "2_2_1_2_1");
			Assert(block.IsOntable("B3"), "2_2_1_2_1");
			Assert(block.IsOntable("B6"), "2_2_1_2_1");
		}

		public void Test9() {
			Console.WriteLine("Test case 9");
			Init2();
			block.Unstack("B1", "B3");
			block.Putdown("B1");
			block.Pickup("B3");
			block.Stack("B3", "B1");
			Assert(block.IsClear("B3"), "2_2_1_2_2");
			Assert(block.IsClear("B6"), "2_2_1_2_2");
			Assert(block.IsOn("B3", "B1"), "2_2_1_2_2");
			Assert(block.IsOntable("B1"), "2_2_1_2_2");
			Assert(block.IsOntable("B6"), "2_2_1_2_2");
			block.Pickup("B6");
			Assert(block.IsClear("B3"), "2_2_1_2_2_1");
			Assert(block.IsHolding("B6"), "2_2_1_2_2_1");
			Assert(block.IsOn("B3", "B1"), "2_2_1_2_2_1");
			Assert(block.IsOntable("B1"), "2_2_1_2_2_1");
			block.Putdown("B6");
			Assert(block.IsClear("B3"), "");
			Assert(block.IsClear("B6"), "");
			Assert(block.IsOn("B3", "B1"), "");
			Assert(block.IsOntable("B1"), "");
			Assert(block.IsOntable("B6"), "");
		}

		public void Test10() {
			Console.WriteLine("Test case 10");
			Init2();
			block.Unstack("B1", "B3");
			block.Putdown("B1");
			block.Pickup("B3");
			block.Stack("B3", "B1");
			block.Pickup("B6");
			block.Stack("B6", "B3");
			Assert(block.IsClear("B6"), "");
			Assert(block.IsOn("B3", "B1"), "");
			Assert(block.IsOn("B6", "B3"), "");
			Assert(block.IsOntable("B1"), "");
			block.Unstack("B6", "B3");
			Assert(block.IsClear("B3"), "");
			Assert(block.IsHolding("B6"), "");
			Assert(block.IsOn("B3", "B1"), "");
			Assert(block.IsOntable("B1"), "");
		}

		public void Test11() {
			Console.WriteLine("Test case 11");
			Init2();
			block.Unstack("B1", "B3");
			block.Putdown("B1");
			block.Pickup("B3");
			block.Stack("B3", "B1");
			block.Unstack("B3", "B1");
			Assert(block.IsClear("B1"), "2_2_1_2_2_2");
			Assert(block.IsClear("B6"), "2_2_1_2_2_2");
			Assert(block.IsHolding("B3"), "2_2_1_2_2_2");
			Assert(block.IsOntable("B1"), "2_2_1_2_2_2");
			Assert(block.IsOntable("B6"), "2_2_1_2_2_2");
		}

		public void Test12() {
			Console.WriteLine("Test case 12");
			Init2();
			block.Unstack("B1", "B3");
			block.Putdown("B1");
			block.Pickup("B3");
			block.Stack("B3", "B6");
			Assert(block.IsClear("B1"), "2_2_1_2_3");
			Assert(block.IsClear("B3"), "2_2_1_2_3");
			Assert(block.IsOn("B3", "B6"), "2_2_1_2_3");
			Assert(block.IsOntable("B1"), "2_2_1_2_3");
			Assert(block.IsOntable("B6"), "2_2_1_2_3");
			block.Pickup("B1");
			Assert(block.IsClear("B3"), "2_2_1_2_3_1");
			Assert(block.IsHolding("B1"), "2_2_1_2_3_1");
			Assert(block.IsOn("B3", "B6"), "2_2_1_2_3_1");
			Assert(block.IsOntable("B6"), "2_2_1_2_3_1");
			block.Putdown("B1");
			Assert(block.IsClear("B1"), "");
			Assert(block.IsClear("B3"), "");
			Assert(block.IsOn("B3", "B6"), "");
			Assert(block.IsOntable("B1"), "");
			Assert(block.IsOntable("B6"), "");
		}

		public void Test13() {
			Console.WriteLine("Test case 13");
			Init2();
			block.Unstack("B1", "B3");
			block.Putdown("B1");
			block.Pickup("B3");
			block.Stack("B3", "B6");
			block.Pickup("B1");
			block.Stack("B1", "B3");
			Assert(block.IsClear("B1"), "");
			Assert(block.IsOn("B1", "B3"), "");
			Assert(block.IsOn("B3", "B6"), "");
			Assert(block.IsOntable("B6"), "");
			block.Unstack("B1", "B3");
			Assert(block.IsClear("B3"), "");
			Assert(block.IsHolding("B1"), "");
			Assert(block.IsOn("B3", "B6"), "");
			Assert(block.IsOntable("B6"), "");
		}

		public void Test14() {
			Console.WriteLine("Test case 14");
			Init2();
			block.Unstack("B1", "B3");
			block.Putdown("B1");
			block.Pickup("B3");
			block.Stack("B3", "B6");
			block.Unstack("B3", "B6");
			Assert(block.IsClear("B1"), "2_2_1_2_3_2");
			Assert(block.IsClear("B6"), "2_2_1_2_3_2");
			Assert(block.IsHolding("B3"), "2_2_1_2_3_2");
			Assert(block.IsOntable("B1"), "2_2_1_2_3_2");
			Assert(block.IsOntable("B6"), "2_2_1_2_3_2");
		}

		public void Test15() {
			Console.WriteLine("Test case 15");
			Init2();
			block.Unstack("B1", "B3");
			block.Putdown("B1");
			block.Pickup("B6");
			Assert(block.IsClear("B1"), "2_2_1_3");
			Assert(block.IsClear("B3"), "2_2_1_3");
			Assert(block.IsHolding("B6"), "2_2_1_3");
			Assert(block.IsOntable("B1"), "2_2_1_3");
			Assert(block.IsOntable("B3"), "2_2_1_3");
			block.Putdown("B6");
			Assert(block.IsClear("B1"), "2_2_1_3_1");
			Assert(block.IsClear("B3"), "2_2_1_3_1");
			Assert(block.IsClear("B6"), "2_2_1_3_1");
			Assert(block.IsOntable("B1"), "2_2_1_3_1");
			Assert(block.IsOntable("B3"), "2_2_1_3_1");
			Assert(block.IsOntable("B6"), "2_2_1_3_1");
		}

		public void Test16() {
			Console.WriteLine("Test case 16");
			Init2();
			block.Unstack("B1", "B3");
			block.Putdown("B1");
			block.Pickup("B6");
			block.Stack("B6", "B1");
			Assert(block.IsClear("B3"), "2_2_1_3_2");
			Assert(block.IsClear("B6"), "2_2_1_3_2");
			Assert(block.IsOn("B6", "B1"), "2_2_1_3_2");
			Assert(block.IsOntable("B1"), "2_2_1_3_2");
			Assert(block.IsOntable("B3"), "2_2_1_3_2");
			block.Pickup("B3");
			Assert(block.IsClear("B6"), "2_2_1_3_2_1");
			Assert(block.IsHolding("B3"), "2_2_1_3_2_1");
			Assert(block.IsOn("B6", "B1"), "2_2_1_3_2_1");
			Assert(block.IsOntable("B1"), "2_2_1_3_2_1");
			block.Putdown("B3");
			Assert(block.IsClear("B3"), "");
			Assert(block.IsClear("B6"), "");
			Assert(block.IsOn("B6", "B1"), "");
			Assert(block.IsOntable("B1"), "");
			Assert(block.IsOntable("B3"), "");
		}

		public void Test17() {
			Console.WriteLine("Test case 17");
			Init2();
			block.Unstack("B1", "B3");
			block.Putdown("B1");
			block.Pickup("B6");
			block.Stack("B6", "B1");
			block.Pickup("B3");
			block.Stack("B3", "B6");
			Assert(block.IsClear("B3"), "");
			Assert(block.IsOn("B3", "B6"), "");
			Assert(block.IsOn("B6", "B1"), "");
			Assert(block.IsOntable("B1"), "");
			block.Unstack("B3", "B6");
			Assert(block.IsClear("B6"), "");
			Assert(block.IsHolding("B3"), "");
			Assert(block.IsOn("B6", "B1"), "");
			Assert(block.IsOntable("B1"), "");
		}

		public void Test18() {
			Console.WriteLine("Test case 18");
			Init2();
			block.Unstack("B1", "B3");
			block.Putdown("B1");
			block.Pickup("B6");
			block.Stack("B6", "B1");
			block.Unstack("B6", "B1");
			Assert(block.IsClear("B1"), "2_2_1_3_2_2");
			Assert(block.IsClear("B3"), "2_2_1_3_2_2");
			Assert(block.IsHolding("B6"), "2_2_1_3_2_2");
			Assert(block.IsOntable("B1"), "2_2_1_3_2_2");
			Assert(block.IsOntable("B3"), "2_2_1_3_2_2");
		}

		public void Test19() {
			Console.WriteLine("Test case 19");
			Init2();
			block.Unstack("B1", "B3");
			block.Putdown("B1");
			block.Pickup("B6");
			block.Stack("B6", "B3");
			Assert(block.IsClear("B1"), "2_2_1_3_3");
			Assert(block.IsClear("B6"), "2_2_1_3_3");
			Assert(block.IsOn("B6", "B3"), "2_2_1_3_3");
			Assert(block.IsOntable("B1"), "2_2_1_3_3");
			Assert(block.IsOntable("B3"), "2_2_1_3_3");
			block.Pickup("B1");
			Assert(block.IsClear("B6"), "2_2_1_3_3_1");
			Assert(block.IsHolding("B1"), "2_2_1_3_3_1");
			Assert(block.IsOn("B6", "B3"), "2_2_1_3_3_1");
			Assert(block.IsOntable("B3"), "2_2_1_3_3_1");
			block.Putdown("B1");
			Assert(block.IsClear("B1"), "");
			Assert(block.IsClear("B6"), "");
			Assert(block.IsOn("B6", "B3"), "");
			Assert(block.IsOntable("B1"), "");
			Assert(block.IsOntable("B3"), "");
		}

		public void Test20() {
			Console.WriteLine("Test case 20");
			Init2();
			block.Unstack("B1", "B3");
			block.Putdown("B1");
			block.Pickup("B6");
			block.Stack("B6", "B3");
			block.Pickup("B1");
			block.Stack("B1", "B6");
			Assert(block.IsClear("B1"), "");
			Assert(block.IsOn("B1", "B6"), "");
			Assert(block.IsOn("B6", "B3"), "");
			Assert(block.IsOntable("B3"), "");
			block.Unstack("B1", "B6");
			Assert(block.IsClear("B6"), "");
			Assert(block.IsHolding("B1"), "");
			Assert(block.IsOn("B6", "B3"), "");
			Assert(block.IsOntable("B3"), "");
		}

		public void Test21() {
			Console.WriteLine("Test case 21");
			Init2();
			block.Unstack("B1", "B3");
			block.Putdown("B1");
			block.Pickup("B6");
			block.Stack("B6", "B3");
			block.Unstack("B6", "B3");
			Assert(block.IsClear("B1"), "2_2_1_3_3_2");
			Assert(block.IsClear("B3"), "2_2_1_3_3_2");
			Assert(block.IsHolding("B6"), "2_2_1_3_3_2");
			Assert(block.IsOntable("B1"), "2_2_1_3_3_2");
			Assert(block.IsOntable("B3"), "2_2_1_3_3_2");
		}

		public void Test22() {
			Console.WriteLine("Test case 22");
			Init2();
			block.Unstack("B1", "B3");
			block.Stack("B1", "B3");
			Assert(block.IsClear("B1"), "2_2_2");
			Assert(block.IsClear("B6"), "2_2_2");
			Assert(block.IsOn("B1", "B3"), "2_2_2");
			Assert(block.IsOntable("B3"), "2_2_2");
			Assert(block.IsOntable("B6"), "2_2_2");
		}

		public void Test23() {
			Console.WriteLine("Test case 23");
			Init2();
			block.Unstack("B1", "B3");
			block.Stack("B1", "B6");
			Assert(block.IsClear("B1"), "2_2_3");
			Assert(block.IsClear("B3"), "2_2_3");
			Assert(block.IsOn("B1", "B6"), "2_2_3");
			Assert(block.IsOntable("B3"), "2_2_3");
			Assert(block.IsOntable("B6"), "2_2_3");
			block.Pickup("B3");
			Assert(block.IsClear("B1"), "2_2_3_1");
			Assert(block.IsHolding("B3"), "2_2_3_1");
			Assert(block.IsOn("B1", "B6"), "2_2_3_1");
			Assert(block.IsOntable("B6"), "2_2_3_1");
			block.Putdown("B3");
			Assert(block.IsClear("B1"), "2_2_3_1_1");
			Assert(block.IsClear("B3"), "2_2_3_1_1");
			Assert(block.IsOn("B1", "B6"), "2_2_3_1_1");
			Assert(block.IsOntable("B3"), "2_2_3_1_1");
			Assert(block.IsOntable("B6"), "2_2_3_1_1");
		}

		public void Test24() {
			Console.WriteLine("Test case 24");
			Init2();
			block.Unstack("B1", "B3");
			block.Stack("B1", "B6");
			block.Pickup("B3");
			block.Stack("B3", "B1");
			Assert(block.IsClear("B3"), "2_2_3_1_2");
			Assert(block.IsOn("B1", "B6"), "2_2_3_1_2");
			Assert(block.IsOn("B3", "B1"), "2_2_3_1_2");
			Assert(block.IsOntable("B6"), "2_2_3_1_2");
			block.Unstack("B3", "B1");
			Assert(block.IsClear("B1"), "2_2_3_1_2_1");
			Assert(block.IsHolding("B3"), "2_2_3_1_2_1");
			Assert(block.IsOn("B1", "B6"), "2_2_3_1_2_1");
			Assert(block.IsOntable("B6"), "2_2_3_1_2_1");
		}

		public void Test25() {
			Console.WriteLine("Test case 25");
			Init2();
			block.Unstack("B1", "B3");
			block.Stack("B1", "B6");
			block.Unstack("B1", "B6");
			Assert(block.IsClear("B3"), "2_2_3_2");
			Assert(block.IsClear("B6"), "2_2_3_2");
			Assert(block.IsHolding("B1"), "2_2_3_2");
			Assert(block.IsOntable("B3"), "2_2_3_2");
			Assert(block.IsOntable("B6"), "2_2_3_2");
		}

		public void Test26() {
			Console.WriteLine("Test case 26");
			Init3();
			block.Unstack("B2", "B3");
			Assert(block.IsClear("B3"), "3_1");
			Assert(block.IsClear("B5"), "3_1");
			Assert(block.IsHolding("B2"), "3_1");
			Assert(block.IsOn("B5", "B6"), "3_1");
			Assert(block.IsOntable("B3"), "3_1");
			Assert(block.IsOntable("B6"), "3_1");
			block.Putdown("B2");
			Assert(block.IsClear("B2"), "3_1_1");
			Assert(block.IsClear("B3"), "3_1_1");
			Assert(block.IsClear("B5"), "3_1_1");
			Assert(block.IsOn("B5", "B6"), "3_1_1");
			Assert(block.IsOntable("B2"), "3_1_1");
			Assert(block.IsOntable("B3"), "3_1_1");
			Assert(block.IsOntable("B6"), "3_1_1");
			block.Pickup("B2");
			Assert(block.IsClear("B3"), "3_1_1_1");
			Assert(block.IsClear("B5"), "3_1_1_1");
			Assert(block.IsHolding("B2"), "3_1_1_1");
			Assert(block.IsOn("B5", "B6"), "3_1_1_1");
			Assert(block.IsOntable("B3"), "3_1_1_1");
			Assert(block.IsOntable("B6"), "3_1_1_1");
		}

		public void Test27() {
			Console.WriteLine("Test case 27");
			Init3();
			block.Unstack("B2", "B3");
			block.Putdown("B2");
			block.Pickup("B3");
			Assert(block.IsClear("B2"), "3_1_1_2");
			Assert(block.IsClear("B5"), "3_1_1_2");
			Assert(block.IsHolding("B3"), "3_1_1_2");
			Assert(block.IsOn("B5", "B6"), "3_1_1_2");
			Assert(block.IsOntable("B2"), "3_1_1_2");
			Assert(block.IsOntable("B6"), "3_1_1_2");
			block.Putdown("B3");
			Assert(block.IsClear("B2"), "3_1_1_2_1");
			Assert(block.IsClear("B3"), "3_1_1_2_1");
			Assert(block.IsClear("B5"), "3_1_1_2_1");
			Assert(block.IsOn("B5", "B6"), "3_1_1_2_1");
			Assert(block.IsOntable("B2"), "3_1_1_2_1");
			Assert(block.IsOntable("B3"), "3_1_1_2_1");
			Assert(block.IsOntable("B6"), "3_1_1_2_1");
		}

		public void Test28() {
			Console.WriteLine("Test case 28");
			Init3();
			block.Unstack("B2", "B3");
			block.Putdown("B2");
			block.Pickup("B3");
			block.Stack("B3", "B2");
			Assert(block.IsClear("B3"), "3_1_1_2_2");
			Assert(block.IsClear("B5"), "3_1_1_2_2");
			Assert(block.IsOn("B3", "B2"), "3_1_1_2_2");
			Assert(block.IsOn("B5", "B6"), "3_1_1_2_2");
			Assert(block.IsOntable("B2"), "3_1_1_2_2");
			Assert(block.IsOntable("B6"), "3_1_1_2_2");
			block.Unstack("B3", "B2");
			Assert(block.IsClear("B2"), "3_1_1_2_2_1");
			Assert(block.IsClear("B5"), "3_1_1_2_2_1");
			Assert(block.IsHolding("B3"), "3_1_1_2_2_1");
			Assert(block.IsOn("B5", "B6"), "3_1_1_2_2_1");
			Assert(block.IsOntable("B2"), "3_1_1_2_2_1");
			Assert(block.IsOntable("B6"), "3_1_1_2_2_1");
		}

		public void Test29() {
			Console.WriteLine("Test case 29");
			Init3();
			block.Unstack("B2", "B3");
			block.Putdown("B2");
			block.Pickup("B3");
			block.Stack("B3", "B2");
			block.Unstack("B5", "B6");
			Assert(block.IsClear("B3"), "3_1_1_2_2_2");
			Assert(block.IsClear("B6"), "3_1_1_2_2_2");
			Assert(block.IsHolding("B5"), "3_1_1_2_2_2");
			Assert(block.IsOn("B3", "B2"), "3_1_1_2_2_2");
			Assert(block.IsOntable("B2"), "3_1_1_2_2_2");
			Assert(block.IsOntable("B6"), "3_1_1_2_2_2");
			block.Putdown("B5");
			Assert(block.IsClear("B3"), "");
			Assert(block.IsClear("B5"), "");
			Assert(block.IsClear("B6"), "");
			Assert(block.IsOn("B3", "B2"), "");
			Assert(block.IsOntable("B2"), "");
			Assert(block.IsOntable("B5"), "");
			Assert(block.IsOntable("B6"), "");
			block.Pickup("B5");
			Assert(block.IsClear("B3"), "");
			Assert(block.IsClear("B6"), "");
			Assert(block.IsHolding("B5"), "");
			Assert(block.IsOn("B3", "B2"), "");
			Assert(block.IsOntable("B2"), "");
			Assert(block.IsOntable("B6"), "");
		}

		public void Test30() {
			Console.WriteLine("Test case 30");
			Init3();
			block.Unstack("B2", "B3");
			block.Putdown("B2");
			block.Pickup("B3");
			block.Stack("B3", "B2");
			block.Unstack("B5", "B6");
			block.Putdown("B5");
			block.Pickup("B6");
			Assert(block.IsClear("B3"), "");
			Assert(block.IsClear("B5"), "");
			Assert(block.IsHolding("B6"), "");
			Assert(block.IsOn("B3", "B2"), "");
			Assert(block.IsOntable("B2"), "");
			Assert(block.IsOntable("B5"), "");
			block.Putdown("B6");
			Assert(block.IsClear("B3"), "");
			Assert(block.IsClear("B5"), "");
			Assert(block.IsClear("B6"), "");
			Assert(block.IsOn("B3", "B2"), "");
			Assert(block.IsOntable("B2"), "");
			Assert(block.IsOntable("B5"), "");
			Assert(block.IsOntable("B6"), "");
		}

		public void Test31() {
			Console.WriteLine("Test case 31");
			Init3();
			block.Unstack("B2", "B3");
			block.Putdown("B2");
			block.Pickup("B3");
			block.Stack("B3", "B2");
			block.Unstack("B5", "B6");
			block.Putdown("B5");
			block.Pickup("B6");
			block.Stack("B6", "B3");
			Assert(block.IsClear("B5"), "");
			Assert(block.IsClear("B6"), "");
			Assert(block.IsOn("B3", "B2"), "");
			Assert(block.IsOn("B6", "B3"), "");
			Assert(block.IsOntable("B2"), "");
			Assert(block.IsOntable("B5"), "");
			block.Pickup("B5");
			Assert(block.IsClear("B6"), "");
			Assert(block.IsHolding("B5"), "");
			Assert(block.IsOn("B3", "B2"), "");
			Assert(block.IsOn("B6", "B3"), "");
			Assert(block.IsOntable("B2"), "");
			block.Putdown("B5");
			Assert(block.IsClear("B5"), "");
			Assert(block.IsClear("B6"), "");
			Assert(block.IsOn("B3", "B2"), "");
			Assert(block.IsOn("B6", "B3"), "");
			Assert(block.IsOntable("B2"), "");
			Assert(block.IsOntable("B5"), "");
		}

		public void Test32() {
			Console.WriteLine("Test case 32");
			Init3();
			block.Unstack("B2", "B3");
			block.Putdown("B2");
			block.Pickup("B3");
			block.Stack("B3", "B2");
			block.Unstack("B5", "B6");
			block.Putdown("B5");
			block.Pickup("B6");
			block.Stack("B6", "B3");
			block.Pickup("B5");
			block.Stack("B5", "B6");
			Assert(block.IsClear("B5"), "");
			Assert(block.IsOn("B3", "B2"), "");
			Assert(block.IsOn("B5", "B6"), "");
			Assert(block.IsOn("B6", "B3"), "");
			Assert(block.IsOntable("B2"), "");
			block.Unstack("B5", "B6");
			Assert(block.IsClear("B6"), "");
			Assert(block.IsHolding("B5"), "");
			Assert(block.IsOn("B3", "B2"), "");
			Assert(block.IsOn("B6", "B3"), "");
			Assert(block.IsOntable("B2"), "");
		}

		public void Test33() {
			Console.WriteLine("Test case 33");
			Init3();
			block.Unstack("B2", "B3");
			block.Putdown("B2");
			block.Pickup("B3");
			block.Stack("B3", "B2");
			block.Unstack("B5", "B6");
			block.Putdown("B5");
			block.Pickup("B6");
			block.Stack("B6", "B3");
			block.Unstack("B6", "B3");
			Assert(block.IsClear("B3"), "");
			Assert(block.IsClear("B5"), "");
			Assert(block.IsHolding("B6"), "");
			Assert(block.IsOn("B3", "B2"), "");
			Assert(block.IsOntable("B2"), "");
			Assert(block.IsOntable("B5"), "");
		}

		public void Test34() {
			Console.WriteLine("Test case 34");
			Init3();
			block.Unstack("B2", "B3");
			block.Putdown("B2");
			block.Pickup("B3");
			block.Stack("B3", "B2");
			block.Unstack("B5", "B6");
			block.Putdown("B5");
			block.Pickup("B6");
			block.Stack("B6", "B5");
			Assert(block.IsClear("B3"), "");
			Assert(block.IsClear("B6"), "");
			Assert(block.IsOn("B3", "B2"), "");
			Assert(block.IsOn("B6", "B5"), "");
			Assert(block.IsOntable("B2"), "");
			Assert(block.IsOntable("B5"), "");
			block.Unstack("B3", "B2");
			Assert(block.IsClear("B2"), "");
			Assert(block.IsClear("B6"), "");
			Assert(block.IsHolding("B3"), "");
			Assert(block.IsOn("B6", "B5"), "");
			Assert(block.IsOntable("B2"), "");
			Assert(block.IsOntable("B5"), "");
		}

		public void Test35() {
			Console.WriteLine("Test case 35");
			Init3();
			block.Unstack("B2", "B3");
			block.Putdown("B2");
			block.Pickup("B3");
			block.Stack("B3", "B2");
			block.Unstack("B5", "B6");
			block.Putdown("B5");
			block.Pickup("B6");
			block.Stack("B6", "B5");
			block.Unstack("B6", "B5");
			Assert(block.IsClear("B3"), "");
			Assert(block.IsClear("B5"), "");
			Assert(block.IsHolding("B6"), "");
			Assert(block.IsOn("B3", "B2"), "");
			Assert(block.IsOntable("B2"), "");
			Assert(block.IsOntable("B5"), "");
		}

		public void Test36() {
			Console.WriteLine("Test case 36");
			Init3();
			block.Unstack("B2", "B3");
			block.Putdown("B2");
			block.Pickup("B3");
			block.Stack("B3", "B2");
			block.Unstack("B5", "B6");
			block.Putdown("B5");
			block.Unstack("B3", "B2");
			Assert(block.IsClear("B2"), "");
			Assert(block.IsClear("B5"), "");
			Assert(block.IsClear("B6"), "");
			Assert(block.IsHolding("B3"), "");
			Assert(block.IsOntable("B2"), "");
			Assert(block.IsOntable("B5"), "");
			Assert(block.IsOntable("B6"), "");
		}

		public void Test37() {
			Console.WriteLine("Test case 37");
			Init3();
			block.Unstack("B2", "B3");
			block.Putdown("B2");
			block.Pickup("B3");
			block.Stack("B3", "B2");
			block.Unstack("B5", "B6");
			block.Stack("B5", "B3");
			Assert(block.IsClear("B5"), "");
			Assert(block.IsClear("B6"), "");
			Assert(block.IsOn("B3", "B2"), "");
			Assert(block.IsOn("B5", "B3"), "");
			Assert(block.IsOntable("B2"), "");
			Assert(block.IsOntable("B6"), "");
			block.Pickup("B6");
			Assert(block.IsClear("B5"), "");
			Assert(block.IsHolding("B6"), "");
			Assert(block.IsOn("B3", "B2"), "");
			Assert(block.IsOn("B5", "B3"), "");
			Assert(block.IsOntable("B2"), "");
			block.Putdown("B6");
			Assert(block.IsClear("B5"), "");
			Assert(block.IsClear("B6"), "");
			Assert(block.IsOn("B3", "B2"), "");
			Assert(block.IsOn("B5", "B3"), "");
			Assert(block.IsOntable("B2"), "");
			Assert(block.IsOntable("B6"), "");
		}

		public void Test38() {
			Console.WriteLine("Test case 38");
			Init3();
			block.Unstack("B2", "B3");
			block.Putdown("B2");
			block.Pickup("B3");
			block.Stack("B3", "B2");
			block.Unstack("B5", "B6");
			block.Stack("B5", "B3");
			block.Pickup("B6");
			block.Stack("B6", "B5");
			Assert(block.IsClear("B6"), "");
			Assert(block.IsOn("B3", "B2"), "");
			Assert(block.IsOn("B5", "B3"), "");
			Assert(block.IsOn("B6", "B5"), "");
			Assert(block.IsOntable("B2"), "");
			block.Unstack("B6", "B5");
			Assert(block.IsClear("B5"), "");
			Assert(block.IsHolding("B6"), "");
			Assert(block.IsOn("B3", "B2"), "");
			Assert(block.IsOn("B5", "B3"), "");
			Assert(block.IsOntable("B2"), "");
		}

		public void Test39() {
			Console.WriteLine("Test case 39");
			Init3();
			block.Unstack("B2", "B3");
			block.Putdown("B2");
			block.Pickup("B3");
			block.Stack("B3", "B2");
			block.Unstack("B5", "B6");
			block.Stack("B5", "B3");
			block.Unstack("B5", "B3");
			Assert(block.IsClear("B3"), "");
			Assert(block.IsClear("B6"), "");
			Assert(block.IsHolding("B5"), "");
			Assert(block.IsOn("B3", "B2"), "");
			Assert(block.IsOntable("B2"), "");
			Assert(block.IsOntable("B6"), "");
		}

		public void Test40() {
			Console.WriteLine("Test case 40");
			Init3();
			block.Unstack("B2", "B3");
			block.Putdown("B2");
			block.Pickup("B3");
			block.Stack("B3", "B2");
			block.Unstack("B5", "B6");
			block.Stack("B5", "B6");
			Assert(block.IsClear("B3"), "");
			Assert(block.IsClear("B5"), "");
			Assert(block.IsOn("B3", "B2"), "");
			Assert(block.IsOn("B5", "B6"), "");
			Assert(block.IsOntable("B2"), "");
			Assert(block.IsOntable("B6"), "");
		}

		public void Test41() {
			Console.WriteLine("Test case 41");
			Init3();
			block.Unstack("B2", "B3");
			block.Putdown("B2");
			block.Pickup("B3");
			block.Stack("B3", "B5");
			Assert(block.IsClear("B2"), "3_1_1_2_3");
			Assert(block.IsClear("B3"), "3_1_1_2_3");
			Assert(block.IsOn("B3", "B5"), "3_1_1_2_3");
			Assert(block.IsOn("B5", "B6"), "3_1_1_2_3");
			Assert(block.IsOntable("B2"), "3_1_1_2_3");
			Assert(block.IsOntable("B6"), "3_1_1_2_3");
			block.Pickup("B2");
			Assert(block.IsClear("B3"), "3_1_1_2_3_1");
			Assert(block.IsHolding("B2"), "3_1_1_2_3_1");
			Assert(block.IsOn("B3", "B5"), "3_1_1_2_3_1");
			Assert(block.IsOn("B5", "B6"), "3_1_1_2_3_1");
			Assert(block.IsOntable("B6"), "3_1_1_2_3_1");
			block.Putdown("B2");
			Assert(block.IsClear("B2"), "");
			Assert(block.IsClear("B3"), "");
			Assert(block.IsOn("B3", "B5"), "");
			Assert(block.IsOn("B5", "B6"), "");
			Assert(block.IsOntable("B2"), "");
			Assert(block.IsOntable("B6"), "");
		}

		public void Test42() {
			Console.WriteLine("Test case 42");
			Init3();
			block.Unstack("B2", "B3");
			block.Putdown("B2");
			block.Pickup("B3");
			block.Stack("B3", "B5");
			block.Pickup("B2");
			block.Stack("B2", "B3");
			Assert(block.IsClear("B2"), "");
			Assert(block.IsOn("B2", "B3"), "");
			Assert(block.IsOn("B3", "B5"), "");
			Assert(block.IsOn("B5", "B6"), "");
			Assert(block.IsOntable("B6"), "");
			block.Unstack("B2", "B3");
			Assert(block.IsClear("B3"), "");
			Assert(block.IsHolding("B2"), "");
			Assert(block.IsOn("B3", "B5"), "");
			Assert(block.IsOn("B5", "B6"), "");
			Assert(block.IsOntable("B6"), "");
		}

		public void Test43() {
			Console.WriteLine("Test case 43");
			Init3();
			block.Unstack("B2", "B3");
			block.Putdown("B2");
			block.Pickup("B3");
			block.Stack("B3", "B5");
			block.Unstack("B3", "B5");
			Assert(block.IsClear("B2"), "3_1_1_2_3_2");
			Assert(block.IsClear("B5"), "3_1_1_2_3_2");
			Assert(block.IsHolding("B3"), "3_1_1_2_3_2");
			Assert(block.IsOn("B5", "B6"), "3_1_1_2_3_2");
			Assert(block.IsOntable("B2"), "3_1_1_2_3_2");
			Assert(block.IsOntable("B6"), "3_1_1_2_3_2");
		}

		public void Test44() {
			Console.WriteLine("Test case 44");
			Init3();
			block.Unstack("B2", "B3");
			block.Putdown("B2");
			block.Unstack("B5", "B6");
			Assert(block.IsClear("B2"), "3_1_1_3");
			Assert(block.IsClear("B3"), "3_1_1_3");
			Assert(block.IsClear("B6"), "3_1_1_3");
			Assert(block.IsHolding("B5"), "3_1_1_3");
			Assert(block.IsOntable("B2"), "3_1_1_3");
			Assert(block.IsOntable("B3"), "3_1_1_3");
			Assert(block.IsOntable("B6"), "3_1_1_3");
			block.Putdown("B5");
			Assert(block.IsClear("B2"), "3_1_1_3_1");
			Assert(block.IsClear("B3"), "3_1_1_3_1");
			Assert(block.IsClear("B5"), "3_1_1_3_1");
			Assert(block.IsClear("B6"), "3_1_1_3_1");
			Assert(block.IsOntable("B2"), "3_1_1_3_1");
			Assert(block.IsOntable("B3"), "3_1_1_3_1");
			Assert(block.IsOntable("B5"), "3_1_1_3_1");
			Assert(block.IsOntable("B6"), "3_1_1_3_1");
			block.Pickup("B2");
			Assert(block.IsClear("B3"), "3_1_1_3_1_1");
			Assert(block.IsClear("B5"), "3_1_1_3_1_1");
			Assert(block.IsClear("B6"), "3_1_1_3_1_1");
			Assert(block.IsHolding("B2"), "3_1_1_3_1_1");
			Assert(block.IsOntable("B3"), "3_1_1_3_1_1");
			Assert(block.IsOntable("B5"), "3_1_1_3_1_1");
			Assert(block.IsOntable("B6"), "3_1_1_3_1_1");
		}

		public void Test45() {
			Console.WriteLine("Test case 45");
			Init3();
			block.Unstack("B2", "B3");
			block.Putdown("B2");
			block.Unstack("B5", "B6");
			block.Putdown("B5");
			block.Pickup("B3");
			Assert(block.IsClear("B2"), "3_1_1_3_1_2");
			Assert(block.IsClear("B5"), "3_1_1_3_1_2");
			Assert(block.IsClear("B6"), "3_1_1_3_1_2");
			Assert(block.IsHolding("B3"), "3_1_1_3_1_2");
			Assert(block.IsOntable("B2"), "3_1_1_3_1_2");
			Assert(block.IsOntable("B5"), "3_1_1_3_1_2");
			Assert(block.IsOntable("B6"), "3_1_1_3_1_2");
			block.Putdown("B3");
			Assert(block.IsClear("B2"), "");
			Assert(block.IsClear("B3"), "");
			Assert(block.IsClear("B5"), "");
			Assert(block.IsClear("B6"), "");
			Assert(block.IsOntable("B2"), "");
			Assert(block.IsOntable("B3"), "");
			Assert(block.IsOntable("B5"), "");
			Assert(block.IsOntable("B6"), "");
		}

		public void Test46() {
			Console.WriteLine("Test case 46");
			Init3();
			block.Unstack("B2", "B3");
			block.Putdown("B2");
			block.Unstack("B5", "B6");
			block.Putdown("B5");
			block.Pickup("B3");
			block.Stack("B3", "B2");
			Assert(block.IsClear("B3"), "");
			Assert(block.IsClear("B5"), "");
			Assert(block.IsClear("B6"), "");
			Assert(block.IsOn("B3", "B2"), "");
			Assert(block.IsOntable("B2"), "");
			Assert(block.IsOntable("B5"), "");
			Assert(block.IsOntable("B6"), "");
		}

		public void Test47() {
			Console.WriteLine("Test case 47");
			Init3();
			block.Unstack("B2", "B3");
			block.Putdown("B2");
			block.Unstack("B5", "B6");
			block.Putdown("B5");
			block.Pickup("B3");
			block.Stack("B3", "B5");
			Assert(block.IsClear("B2"), "");
			Assert(block.IsClear("B3"), "");
			Assert(block.IsClear("B6"), "");
			Assert(block.IsOn("B3", "B5"), "");
			Assert(block.IsOntable("B2"), "");
			Assert(block.IsOntable("B5"), "");
			Assert(block.IsOntable("B6"), "");
			block.Pickup("B2");
			Assert(block.IsClear("B3"), "");
			Assert(block.IsClear("B6"), "");
			Assert(block.IsHolding("B2"), "");
			Assert(block.IsOn("B3", "B5"), "");
			Assert(block.IsOntable("B5"), "");
			Assert(block.IsOntable("B6"), "");
			block.Putdown("B2");
			Assert(block.IsClear("B2"), "");
			Assert(block.IsClear("B3"), "");
			Assert(block.IsClear("B6"), "");
			Assert(block.IsOn("B3", "B5"), "");
			Assert(block.IsOntable("B2"), "");
			Assert(block.IsOntable("B5"), "");
			Assert(block.IsOntable("B6"), "");
		}

		public void Test48() {
			Console.WriteLine("Test case 48");
			Init3();
			block.Unstack("B2", "B3");
			block.Putdown("B2");
			block.Unstack("B5", "B6");
			block.Putdown("B5");
			block.Pickup("B3");
			block.Stack("B3", "B5");
			block.Pickup("B2");
			block.Stack("B2", "B3");
			Assert(block.IsClear("B2"), "");
			Assert(block.IsClear("B6"), "");
			Assert(block.IsOn("B2", "B3"), "");
			Assert(block.IsOn("B3", "B5"), "");
			Assert(block.IsOntable("B5"), "");
			Assert(block.IsOntable("B6"), "");
			block.Pickup("B6");
			Assert(block.IsClear("B2"), "");
			Assert(block.IsHolding("B6"), "");
			Assert(block.IsOn("B2", "B3"), "");
			Assert(block.IsOn("B3", "B5"), "");
			Assert(block.IsOntable("B5"), "");
			block.Putdown("B6");
			Assert(block.IsClear("B2"), "");
			Assert(block.IsClear("B6"), "");
			Assert(block.IsOn("B2", "B3"), "");
			Assert(block.IsOn("B3", "B5"), "");
			Assert(block.IsOntable("B5"), "");
			Assert(block.IsOntable("B6"), "");
		}

		public void Test49() {
			Console.WriteLine("Test case 49");
			Init3();
			block.Unstack("B2", "B3");
			block.Putdown("B2");
			block.Unstack("B5", "B6");
			block.Putdown("B5");
			block.Pickup("B3");
			block.Stack("B3", "B5");
			block.Pickup("B2");
			block.Stack("B2", "B3");
			block.Pickup("B6");
			block.Stack("B6", "B2");
			Assert(block.IsClear("B6"), "");
			Assert(block.IsOn("B2", "B3"), "");
			Assert(block.IsOn("B3", "B5"), "");
			Assert(block.IsOn("B6", "B2"), "");
			Assert(block.IsOntable("B5"), "");
			block.Unstack("B6", "B2");
			Assert(block.IsClear("B2"), "");
			Assert(block.IsHolding("B6"), "");
			Assert(block.IsOn("B2", "B3"), "");
			Assert(block.IsOn("B3", "B5"), "");
			Assert(block.IsOntable("B5"), "");
		}

		public void Test50() {
			Console.WriteLine("Test case 50");
			Init3();
			block.Unstack("B2", "B3");
			block.Putdown("B2");
			block.Unstack("B5", "B6");
			block.Putdown("B5");
			block.Pickup("B3");
			block.Stack("B3", "B5");
			block.Pickup("B2");
			block.Stack("B2", "B3");
			block.Unstack("B2", "B3");
			Assert(block.IsClear("B3"), "");
			Assert(block.IsClear("B6"), "");
			Assert(block.IsHolding("B2"), "");
			Assert(block.IsOn("B3", "B5"), "");
			Assert(block.IsOntable("B5"), "");
			Assert(block.IsOntable("B6"), "");
		}

		public void Test51() {
			Console.WriteLine("Test case 51");
			Init3();
			block.Unstack("B2", "B3");
			block.Putdown("B2");
			block.Unstack("B5", "B6");
			block.Putdown("B5");
			block.Pickup("B3");
			block.Stack("B3", "B5");
			block.Pickup("B2");
			block.Stack("B2", "B6");
			Assert(block.IsClear("B2"), "");
			Assert(block.IsClear("B3"), "");
			Assert(block.IsOn("B2", "B6"), "");
			Assert(block.IsOn("B3", "B5"), "");
			Assert(block.IsOntable("B5"), "");
			Assert(block.IsOntable("B6"), "");
		}

		public void Test52() {
			Console.WriteLine("Test case 52");
			Init3();
			block.Unstack("B2", "B3");
			block.Putdown("B2");
			block.Unstack("B5", "B6");
			block.Putdown("B5");
			block.Pickup("B3");
			block.Stack("B3", "B5");
			block.Pickup("B6");
			Assert(block.IsClear("B2"), "");
			Assert(block.IsClear("B3"), "");
			Assert(block.IsHolding("B6"), "");
			Assert(block.IsOn("B3", "B5"), "");
			Assert(block.IsOntable("B2"), "");
			Assert(block.IsOntable("B5"), "");
			block.Putdown("B6");
			Assert(block.IsClear("B2"), "");
			Assert(block.IsClear("B3"), "");
			Assert(block.IsClear("B6"), "");
			Assert(block.IsOn("B3", "B5"), "");
			Assert(block.IsOntable("B2"), "");
			Assert(block.IsOntable("B5"), "");
			Assert(block.IsOntable("B6"), "");
		}

		public void Test53() {
			Console.WriteLine("Test case 53");
			Init3();
			block.Unstack("B2", "B3");
			block.Putdown("B2");
			block.Unstack("B5", "B6");
			block.Putdown("B5");
			block.Pickup("B3");
			block.Stack("B3", "B5");
			block.Pickup("B6");
			block.Stack("B6", "B2");
			Assert(block.IsClear("B3"), "");
			Assert(block.IsClear("B6"), "");
			Assert(block.IsOn("B3", "B5"), "");
			Assert(block.IsOn("B6", "B2"), "");
			Assert(block.IsOntable("B2"), "");
			Assert(block.IsOntable("B5"), "");
			block.Unstack("B3", "B5");
			Assert(block.IsClear("B5"), "");
			Assert(block.IsClear("B6"), "");
			Assert(block.IsHolding("B3"), "");
			Assert(block.IsOn("B6", "B2"), "");
			Assert(block.IsOntable("B2"), "");
			Assert(block.IsOntable("B5"), "");
		}

		public void Test54() {
			Console.WriteLine("Test case 54");
			Init3();
			block.Unstack("B2", "B3");
			block.Putdown("B2");
			block.Unstack("B5", "B6");
			block.Putdown("B5");
			block.Pickup("B3");
			block.Stack("B3", "B5");
			block.Pickup("B6");
			block.Stack("B6", "B2");
			block.Unstack("B6", "B2");
			Assert(block.IsClear("B2"), "");
			Assert(block.IsClear("B3"), "");
			Assert(block.IsHolding("B6"), "");
			Assert(block.IsOn("B3", "B5"), "");
			Assert(block.IsOntable("B2"), "");
			Assert(block.IsOntable("B5"), "");
		}

		public void Test55() {
			Console.WriteLine("Test case 55");
			Init3();
			block.Unstack("B2", "B3");
			block.Putdown("B2");
			block.Unstack("B5", "B6");
			block.Putdown("B5");
			block.Pickup("B3");
			block.Stack("B3", "B5");
			block.Pickup("B6");
			block.Stack("B6", "B3");
			Assert(block.IsClear("B2"), "");
			Assert(block.IsClear("B6"), "");
			Assert(block.IsOn("B3", "B5"), "");
			Assert(block.IsOn("B6", "B3"), "");
			Assert(block.IsOntable("B2"), "");
			Assert(block.IsOntable("B5"), "");
			block.Pickup("B2");
			Assert(block.IsClear("B6"), "");
			Assert(block.IsHolding("B2"), "");
			Assert(block.IsOn("B3", "B5"), "");
			Assert(block.IsOn("B6", "B3"), "");
			Assert(block.IsOntable("B5"), "");
			block.Putdown("B2");
			Assert(block.IsClear("B2"), "");
			Assert(block.IsClear("B6"), "");
			Assert(block.IsOn("B3", "B5"), "");
			Assert(block.IsOn("B6", "B3"), "");
			Assert(block.IsOntable("B2"), "");
			Assert(block.IsOntable("B5"), "");
		}

		public void Test56() {
			Console.WriteLine("Test case 56");
			Init3();
			block.Unstack("B2", "B3");
			block.Putdown("B2");
			block.Unstack("B5", "B6");
			block.Putdown("B5");
			block.Pickup("B3");
			block.Stack("B3", "B5");
			block.Pickup("B6");
			block.Stack("B6", "B3");
			block.Pickup("B2");
			block.Stack("B2", "B6");
			Assert(block.IsClear("B2"), "");
			Assert(block.IsOn("B2", "B6"), "");
			Assert(block.IsOn("B3", "B5"), "");
			Assert(block.IsOn("B6", "B3"), "");
			Assert(block.IsOntable("B5"), "");
			block.Unstack("B2", "B6");
			Assert(block.IsClear("B6"), "");
			Assert(block.IsHolding("B2"), "");
			Assert(block.IsOn("B3", "B5"), "");
			Assert(block.IsOn("B6", "B3"), "");
			Assert(block.IsOntable("B5"), "");
		}

		public void Test57() {
			Console.WriteLine("Test case 57");
			Init3();
			block.Unstack("B2", "B3");
			block.Putdown("B2");
			block.Unstack("B5", "B6");
			block.Putdown("B5");
			block.Pickup("B3");
			block.Stack("B3", "B5");
			block.Pickup("B6");
			block.Stack("B6", "B3");
			block.Unstack("B6", "B3");
			Assert(block.IsClear("B2"), "");
			Assert(block.IsClear("B3"), "");
			Assert(block.IsHolding("B6"), "");
			Assert(block.IsOn("B3", "B5"), "");
			Assert(block.IsOntable("B2"), "");
			Assert(block.IsOntable("B5"), "");
		}

		public void Test58() {
			Console.WriteLine("Test case 58");
			Init3();
			block.Unstack("B2", "B3");
			block.Putdown("B2");
			block.Unstack("B5", "B6");
			block.Putdown("B5");
			block.Pickup("B3");
			block.Stack("B3", "B5");
			block.Unstack("B3", "B5");
			Assert(block.IsClear("B2"), "");
			Assert(block.IsClear("B5"), "");
			Assert(block.IsClear("B6"), "");
			Assert(block.IsHolding("B3"), "");
			Assert(block.IsOntable("B2"), "");
			Assert(block.IsOntable("B5"), "");
			Assert(block.IsOntable("B6"), "");
		}

		public void Test59() {
			Console.WriteLine("Test case 59");
			Init3();
			block.Unstack("B2", "B3");
			block.Putdown("B2");
			block.Unstack("B5", "B6");
			block.Putdown("B5");
			block.Pickup("B3");
			block.Stack("B3", "B6");
			Assert(block.IsClear("B2"), "");
			Assert(block.IsClear("B3"), "");
			Assert(block.IsClear("B5"), "");
			Assert(block.IsOn("B3", "B6"), "");
			Assert(block.IsOntable("B2"), "");
			Assert(block.IsOntable("B5"), "");
			Assert(block.IsOntable("B6"), "");
			block.Pickup("B2");
			Assert(block.IsClear("B3"), "");
			Assert(block.IsClear("B5"), "");
			Assert(block.IsHolding("B2"), "");
			Assert(block.IsOn("B3", "B6"), "");
			Assert(block.IsOntable("B5"), "");
			Assert(block.IsOntable("B6"), "");
			block.Putdown("B2");
			Assert(block.IsClear("B2"), "");
			Assert(block.IsClear("B3"), "");
			Assert(block.IsClear("B5"), "");
			Assert(block.IsOn("B3", "B6"), "");
			Assert(block.IsOntable("B2"), "");
			Assert(block.IsOntable("B5"), "");
			Assert(block.IsOntable("B6"), "");
		}

		public void Test60() {
			Console.WriteLine("Test case 60");
			Init3();
			block.Unstack("B2", "B3");
			block.Putdown("B2");
			block.Unstack("B5", "B6");
			block.Putdown("B5");
			block.Pickup("B3");
			block.Stack("B3", "B6");
			block.Pickup("B2");
			block.Stack("B2", "B3");
			Assert(block.IsClear("B2"), "");
			Assert(block.IsClear("B5"), "");
			Assert(block.IsOn("B2", "B3"), "");
			Assert(block.IsOn("B3", "B6"), "");
			Assert(block.IsOntable("B5"), "");
			Assert(block.IsOntable("B6"), "");
			block.Pickup("B5");
			Assert(block.IsClear("B2"), "");
			Assert(block.IsHolding("B5"), "");
			Assert(block.IsOn("B2", "B3"), "");
			Assert(block.IsOn("B3", "B6"), "");
			Assert(block.IsOntable("B6"), "");
			block.Putdown("B5");
			Assert(block.IsClear("B2"), "");
			Assert(block.IsClear("B5"), "");
			Assert(block.IsOn("B2", "B3"), "");
			Assert(block.IsOn("B3", "B6"), "");
			Assert(block.IsOntable("B5"), "");
			Assert(block.IsOntable("B6"), "");
		}

		public void Test61() {
			Console.WriteLine("Test case 61");
			Init3();
			block.Unstack("B2", "B3");
			block.Putdown("B2");
			block.Unstack("B5", "B6");
			block.Putdown("B5");
			block.Pickup("B3");
			block.Stack("B3", "B6");
			block.Pickup("B2");
			block.Stack("B2", "B3");
			block.Pickup("B5");
			block.Stack("B5", "B2");
			Assert(block.IsClear("B5"), "");
			Assert(block.IsOn("B2", "B3"), "");
			Assert(block.IsOn("B3", "B6"), "");
			Assert(block.IsOn("B5", "B2"), "");
			Assert(block.IsOntable("B6"), "");
			block.Unstack("B5", "B2");
			Assert(block.IsClear("B2"), "");
			Assert(block.IsHolding("B5"), "");
			Assert(block.IsOn("B2", "B3"), "");
			Assert(block.IsOn("B3", "B6"), "");
			Assert(block.IsOntable("B6"), "");
		}

		public void Test62() {
			Console.WriteLine("Test case 62");
			Init3();
			block.Unstack("B2", "B3");
			block.Putdown("B2");
			block.Unstack("B5", "B6");
			block.Putdown("B5");
			block.Pickup("B3");
			block.Stack("B3", "B6");
			block.Pickup("B2");
			block.Stack("B2", "B3");
			block.Unstack("B2", "B3");
			Assert(block.IsClear("B3"), "");
			Assert(block.IsClear("B5"), "");
			Assert(block.IsHolding("B2"), "");
			Assert(block.IsOn("B3", "B6"), "");
			Assert(block.IsOntable("B5"), "");
			Assert(block.IsOntable("B6"), "");
		}

		public void Test63() {
			Console.WriteLine("Test case 63");
			Init3();
			block.Unstack("B2", "B3");
			block.Putdown("B2");
			block.Unstack("B5", "B6");
			block.Putdown("B5");
			block.Pickup("B3");
			block.Stack("B3", "B6");
			block.Pickup("B2");
			block.Stack("B2", "B5");
			Assert(block.IsClear("B2"), "");
			Assert(block.IsClear("B3"), "");
			Assert(block.IsOn("B2", "B5"), "");
			Assert(block.IsOn("B3", "B6"), "");
			Assert(block.IsOntable("B5"), "");
			Assert(block.IsOntable("B6"), "");
		}

		public void Test64() {
			Console.WriteLine("Test case 64");
			Init3();
			block.Unstack("B2", "B3");
			block.Putdown("B2");
			block.Unstack("B5", "B6");
			block.Putdown("B5");
			block.Pickup("B3");
			block.Stack("B3", "B6");
			block.Pickup("B5");
			Assert(block.IsClear("B2"), "");
			Assert(block.IsClear("B3"), "");
			Assert(block.IsHolding("B5"), "");
			Assert(block.IsOn("B3", "B6"), "");
			Assert(block.IsOntable("B2"), "");
			Assert(block.IsOntable("B6"), "");
			block.Putdown("B5");
			Assert(block.IsClear("B2"), "");
			Assert(block.IsClear("B3"), "");
			Assert(block.IsClear("B5"), "");
			Assert(block.IsOn("B3", "B6"), "");
			Assert(block.IsOntable("B2"), "");
			Assert(block.IsOntable("B5"), "");
			Assert(block.IsOntable("B6"), "");
		}

		public void Test65() {
			Console.WriteLine("Test case 65");
			Init3();
			block.Unstack("B2", "B3");
			block.Putdown("B2");
			block.Unstack("B5", "B6");
			block.Putdown("B5");
			block.Pickup("B3");
			block.Stack("B3", "B6");
			block.Pickup("B5");
			block.Stack("B5", "B2");
			Assert(block.IsClear("B3"), "");
			Assert(block.IsClear("B5"), "");
			Assert(block.IsOn("B3", "B6"), "");
			Assert(block.IsOn("B5", "B2"), "");
			Assert(block.IsOntable("B2"), "");
			Assert(block.IsOntable("B6"), "");
		}

		public void Test66() {
			Console.WriteLine("Test case 66");
			Init3();
			block.Unstack("B2", "B3");
			block.Putdown("B2");
			block.Unstack("B5", "B6");
			block.Putdown("B5");
			block.Pickup("B3");
			block.Stack("B3", "B6");
			block.Pickup("B5");
			block.Stack("B5", "B3");
			Assert(block.IsClear("B2"), "");
			Assert(block.IsClear("B5"), "");
			Assert(block.IsOn("B3", "B6"), "");
			Assert(block.IsOn("B5", "B3"), "");
			Assert(block.IsOntable("B2"), "");
			Assert(block.IsOntable("B6"), "");
			block.Pickup("B2");
			Assert(block.IsClear("B5"), "");
			Assert(block.IsHolding("B2"), "");
			Assert(block.IsOn("B3", "B6"), "");
			Assert(block.IsOn("B5", "B3"), "");
			Assert(block.IsOntable("B6"), "");
			block.Putdown("B2");
			Assert(block.IsClear("B2"), "");
			Assert(block.IsClear("B5"), "");
			Assert(block.IsOn("B3", "B6"), "");
			Assert(block.IsOn("B5", "B3"), "");
			Assert(block.IsOntable("B2"), "");
			Assert(block.IsOntable("B6"), "");
		}

		public void Test67() {
			Console.WriteLine("Test case 67");
			Init3();
			block.Unstack("B2", "B3");
			block.Putdown("B2");
			block.Unstack("B5", "B6");
			block.Putdown("B5");
			block.Pickup("B3");
			block.Stack("B3", "B6");
			block.Pickup("B5");
			block.Stack("B5", "B3");
			block.Pickup("B2");
			block.Stack("B2", "B5");
			Assert(block.IsClear("B2"), "");
			Assert(block.IsOn("B2", "B5"), "");
			Assert(block.IsOn("B3", "B6"), "");
			Assert(block.IsOn("B5", "B3"), "");
			Assert(block.IsOntable("B6"), "");
			block.Unstack("B2", "B5");
			Assert(block.IsClear("B5"), "");
			Assert(block.IsHolding("B2"), "");
			Assert(block.IsOn("B3", "B6"), "");
			Assert(block.IsOn("B5", "B3"), "");
			Assert(block.IsOntable("B6"), "");
		}

		public void Test68() {
			Console.WriteLine("Test case 68");
			Init3();
			block.Unstack("B2", "B3");
			block.Putdown("B2");
			block.Unstack("B5", "B6");
			block.Putdown("B5");
			block.Pickup("B3");
			block.Stack("B3", "B6");
			block.Pickup("B5");
			block.Stack("B5", "B3");
			block.Unstack("B5", "B3");
			Assert(block.IsClear("B2"), "");
			Assert(block.IsClear("B3"), "");
			Assert(block.IsHolding("B5"), "");
			Assert(block.IsOn("B3", "B6"), "");
			Assert(block.IsOntable("B2"), "");
			Assert(block.IsOntable("B6"), "");
		}

		public void Test69() {
			Console.WriteLine("Test case 69");
			Init3();
			block.Unstack("B2", "B3");
			block.Putdown("B2");
			block.Unstack("B5", "B6");
			block.Putdown("B5");
			block.Pickup("B3");
			block.Stack("B3", "B6");
			block.Unstack("B3", "B6");
			Assert(block.IsClear("B2"), "");
			Assert(block.IsClear("B5"), "");
			Assert(block.IsClear("B6"), "");
			Assert(block.IsHolding("B3"), "");
			Assert(block.IsOntable("B2"), "");
			Assert(block.IsOntable("B5"), "");
			Assert(block.IsOntable("B6"), "");
		}

		public void Test70() {
			Console.WriteLine("Test case 70");
			Init3();
			block.Unstack("B2", "B3");
			block.Putdown("B2");
			block.Unstack("B5", "B6");
			block.Putdown("B5");
			block.Pickup("B5");
			Assert(block.IsClear("B2"), "3_1_1_3_1_3");
			Assert(block.IsClear("B3"), "3_1_1_3_1_3");
			Assert(block.IsClear("B6"), "3_1_1_3_1_3");
			Assert(block.IsHolding("B5"), "3_1_1_3_1_3");
			Assert(block.IsOntable("B2"), "3_1_1_3_1_3");
			Assert(block.IsOntable("B3"), "3_1_1_3_1_3");
			Assert(block.IsOntable("B6"), "3_1_1_3_1_3");
		}

		public void Test71() {
			Console.WriteLine("Test case 71");
			Init3();
			block.Unstack("B2", "B3");
			block.Putdown("B2");
			block.Unstack("B5", "B6");
			block.Putdown("B5");
			block.Pickup("B6");
			Assert(block.IsClear("B2"), "3_1_1_3_1_4");
			Assert(block.IsClear("B3"), "3_1_1_3_1_4");
			Assert(block.IsClear("B5"), "3_1_1_3_1_4");
			Assert(block.IsHolding("B6"), "3_1_1_3_1_4");
			Assert(block.IsOntable("B2"), "3_1_1_3_1_4");
			Assert(block.IsOntable("B3"), "3_1_1_3_1_4");
			Assert(block.IsOntable("B5"), "3_1_1_3_1_4");
			block.Putdown("B6");
			Assert(block.IsClear("B2"), "");
			Assert(block.IsClear("B3"), "");
			Assert(block.IsClear("B5"), "");
			Assert(block.IsClear("B6"), "");
			Assert(block.IsOntable("B2"), "");
			Assert(block.IsOntable("B3"), "");
			Assert(block.IsOntable("B5"), "");
			Assert(block.IsOntable("B6"), "");
		}

		public void Test72() {
			Console.WriteLine("Test case 72");
			Init3();
			block.Unstack("B2", "B3");
			block.Putdown("B2");
			block.Unstack("B5", "B6");
			block.Putdown("B5");
			block.Pickup("B6");
			block.Stack("B6", "B2");
			Assert(block.IsClear("B3"), "");
			Assert(block.IsClear("B5"), "");
			Assert(block.IsClear("B6"), "");
			Assert(block.IsOn("B6", "B2"), "");
			Assert(block.IsOntable("B2"), "");
			Assert(block.IsOntable("B3"), "");
			Assert(block.IsOntable("B5"), "");
			block.Pickup("B3");
			Assert(block.IsClear("B5"), "");
			Assert(block.IsClear("B6"), "");
			Assert(block.IsHolding("B3"), "");
			Assert(block.IsOn("B6", "B2"), "");
			Assert(block.IsOntable("B2"), "");
			Assert(block.IsOntable("B5"), "");
			block.Putdown("B3");
			Assert(block.IsClear("B3"), "");
			Assert(block.IsClear("B5"), "");
			Assert(block.IsClear("B6"), "");
			Assert(block.IsOn("B6", "B2"), "");
			Assert(block.IsOntable("B2"), "");
			Assert(block.IsOntable("B3"), "");
			Assert(block.IsOntable("B5"), "");
		}

		public void Test73() {
			Console.WriteLine("Test case 73");
			Init3();
			block.Unstack("B2", "B3");
			block.Putdown("B2");
			block.Unstack("B5", "B6");
			block.Putdown("B5");
			block.Pickup("B6");
			block.Stack("B6", "B2");
			block.Pickup("B3");
			block.Stack("B3", "B5");
			Assert(block.IsClear("B3"), "");
			Assert(block.IsClear("B6"), "");
			Assert(block.IsOn("B3", "B5"), "");
			Assert(block.IsOn("B6", "B2"), "");
			Assert(block.IsOntable("B2"), "");
			Assert(block.IsOntable("B5"), "");
		}

		public void Test74() {
			Console.WriteLine("Test case 74");
			Init3();
			block.Unstack("B2", "B3");
			block.Putdown("B2");
			block.Unstack("B5", "B6");
			block.Putdown("B5");
			block.Pickup("B6");
			block.Stack("B6", "B2");
			block.Pickup("B3");
			block.Stack("B3", "B6");
			Assert(block.IsClear("B3"), "");
			Assert(block.IsClear("B5"), "");
			Assert(block.IsOn("B3", "B6"), "");
			Assert(block.IsOn("B6", "B2"), "");
			Assert(block.IsOntable("B2"), "");
			Assert(block.IsOntable("B5"), "");
			block.Pickup("B5");
			Assert(block.IsClear("B3"), "");
			Assert(block.IsHolding("B5"), "");
			Assert(block.IsOn("B3", "B6"), "");
			Assert(block.IsOn("B6", "B2"), "");
			Assert(block.IsOntable("B2"), "");
			block.Putdown("B5");
			Assert(block.IsClear("B3"), "");
			Assert(block.IsClear("B5"), "");
			Assert(block.IsOn("B3", "B6"), "");
			Assert(block.IsOn("B6", "B2"), "");
			Assert(block.IsOntable("B2"), "");
			Assert(block.IsOntable("B5"), "");
		}

		public void Test75() {
			Console.WriteLine("Test case 75");
			Init3();
			block.Unstack("B2", "B3");
			block.Putdown("B2");
			block.Unstack("B5", "B6");
			block.Putdown("B5");
			block.Pickup("B6");
			block.Stack("B6", "B2");
			block.Pickup("B3");
			block.Stack("B3", "B6");
			block.Pickup("B5");
			block.Stack("B5", "B3");
			Assert(block.IsClear("B5"), "");
			Assert(block.IsOn("B3", "B6"), "");
			Assert(block.IsOn("B5", "B3"), "");
			Assert(block.IsOn("B6", "B2"), "");
			Assert(block.IsOntable("B2"), "");
			block.Unstack("B5", "B3");
			Assert(block.IsClear("B3"), "");
			Assert(block.IsHolding("B5"), "");
			Assert(block.IsOn("B3", "B6"), "");
			Assert(block.IsOn("B6", "B2"), "");
			Assert(block.IsOntable("B2"), "");
		}

		public void Test76() {
			Console.WriteLine("Test case 76");
			Init3();
			block.Unstack("B2", "B3");
			block.Putdown("B2");
			block.Unstack("B5", "B6");
			block.Putdown("B5");
			block.Pickup("B6");
			block.Stack("B6", "B2");
			block.Pickup("B3");
			block.Stack("B3", "B6");
			block.Unstack("B3", "B6");
			Assert(block.IsClear("B5"), "");
			Assert(block.IsClear("B6"), "");
			Assert(block.IsHolding("B3"), "");
			Assert(block.IsOn("B6", "B2"), "");
			Assert(block.IsOntable("B2"), "");
			Assert(block.IsOntable("B5"), "");
		}

		public void Test77() {
			Console.WriteLine("Test case 77");
			Init3();
			block.Unstack("B2", "B3");
			block.Putdown("B2");
			block.Unstack("B5", "B6");
			block.Putdown("B5");
			block.Pickup("B6");
			block.Stack("B6", "B2");
			block.Pickup("B5");
			Assert(block.IsClear("B3"), "");
			Assert(block.IsClear("B6"), "");
			Assert(block.IsHolding("B5"), "");
			Assert(block.IsOn("B6", "B2"), "");
			Assert(block.IsOntable("B2"), "");
			Assert(block.IsOntable("B3"), "");
			block.Putdown("B5");
			Assert(block.IsClear("B3"), "");
			Assert(block.IsClear("B5"), "");
			Assert(block.IsClear("B6"), "");
			Assert(block.IsOn("B6", "B2"), "");
			Assert(block.IsOntable("B2"), "");
			Assert(block.IsOntable("B3"), "");
			Assert(block.IsOntable("B5"), "");
		}

		public void Test78() {
			Console.WriteLine("Test case 78");
			Init3();
			block.Unstack("B2", "B3");
			block.Putdown("B2");
			block.Unstack("B5", "B6");
			block.Putdown("B5");
			block.Pickup("B6");
			block.Stack("B6", "B2");
			block.Pickup("B5");
			block.Stack("B5", "B3");
			Assert(block.IsClear("B5"), "");
			Assert(block.IsClear("B6"), "");
			Assert(block.IsOn("B5", "B3"), "");
			Assert(block.IsOn("B6", "B2"), "");
			Assert(block.IsOntable("B2"), "");
			Assert(block.IsOntable("B3"), "");
		}

		public void Test79() {
			Console.WriteLine("Test case 79");
			Init3();
			block.Unstack("B2", "B3");
			block.Putdown("B2");
			block.Unstack("B5", "B6");
			block.Putdown("B5");
			block.Pickup("B6");
			block.Stack("B6", "B2");
			block.Pickup("B5");
			block.Stack("B5", "B6");
			Assert(block.IsClear("B3"), "");
			Assert(block.IsClear("B5"), "");
			Assert(block.IsOn("B5", "B6"), "");
			Assert(block.IsOn("B6", "B2"), "");
			Assert(block.IsOntable("B2"), "");
			Assert(block.IsOntable("B3"), "");
			block.Pickup("B3");
			Assert(block.IsClear("B5"), "");
			Assert(block.IsHolding("B3"), "");
			Assert(block.IsOn("B5", "B6"), "");
			Assert(block.IsOn("B6", "B2"), "");
			Assert(block.IsOntable("B2"), "");
			block.Putdown("B3");
			Assert(block.IsClear("B3"), "");
			Assert(block.IsClear("B5"), "");
			Assert(block.IsOn("B5", "B6"), "");
			Assert(block.IsOn("B6", "B2"), "");
			Assert(block.IsOntable("B2"), "");
			Assert(block.IsOntable("B3"), "");
		}

		public void Test80() {
			Console.WriteLine("Test case 80");
			Init3();
			block.Unstack("B2", "B3");
			block.Putdown("B2");
			block.Unstack("B5", "B6");
			block.Putdown("B5");
			block.Pickup("B6");
			block.Stack("B6", "B2");
			block.Pickup("B5");
			block.Stack("B5", "B6");
			block.Pickup("B3");
			block.Stack("B3", "B5");
			Assert(block.IsClear("B3"), "");
			Assert(block.IsOn("B3", "B5"), "");
			Assert(block.IsOn("B5", "B6"), "");
			Assert(block.IsOn("B6", "B2"), "");
			Assert(block.IsOntable("B2"), "");
			block.Unstack("B3", "B5");
			Assert(block.IsClear("B5"), "");
			Assert(block.IsHolding("B3"), "");
			Assert(block.IsOn("B5", "B6"), "");
			Assert(block.IsOn("B6", "B2"), "");
			Assert(block.IsOntable("B2"), "");
		}

		public void Test81() {
			Console.WriteLine("Test case 81");
			Init3();
			block.Unstack("B2", "B3");
			block.Putdown("B2");
			block.Unstack("B5", "B6");
			block.Putdown("B5");
			block.Pickup("B6");
			block.Stack("B6", "B2");
			block.Pickup("B5");
			block.Stack("B5", "B6");
			block.Unstack("B5", "B6");
			Assert(block.IsClear("B3"), "");
			Assert(block.IsClear("B6"), "");
			Assert(block.IsHolding("B5"), "");
			Assert(block.IsOn("B6", "B2"), "");
			Assert(block.IsOntable("B2"), "");
			Assert(block.IsOntable("B3"), "");
		}

		public void Test82() {
			Console.WriteLine("Test case 82");
			Init3();
			block.Unstack("B2", "B3");
			block.Putdown("B2");
			block.Unstack("B5", "B6");
			block.Putdown("B5");
			block.Pickup("B6");
			block.Stack("B6", "B2");
			block.Unstack("B6", "B2");
			Assert(block.IsClear("B2"), "");
			Assert(block.IsClear("B3"), "");
			Assert(block.IsClear("B5"), "");
			Assert(block.IsHolding("B6"), "");
			Assert(block.IsOntable("B2"), "");
			Assert(block.IsOntable("B3"), "");
			Assert(block.IsOntable("B5"), "");
		}

		public void Test83() {
			Console.WriteLine("Test case 83");
			Init3();
			block.Unstack("B2", "B3");
			block.Putdown("B2");
			block.Unstack("B5", "B6");
			block.Putdown("B5");
			block.Pickup("B6");
			block.Stack("B6", "B3");
			Assert(block.IsClear("B2"), "");
			Assert(block.IsClear("B5"), "");
			Assert(block.IsClear("B6"), "");
			Assert(block.IsOn("B6", "B3"), "");
			Assert(block.IsOntable("B2"), "");
			Assert(block.IsOntable("B3"), "");
			Assert(block.IsOntable("B5"), "");
			block.Pickup("B2");
			Assert(block.IsClear("B5"), "");
			Assert(block.IsClear("B6"), "");
			Assert(block.IsHolding("B2"), "");
			Assert(block.IsOn("B6", "B3"), "");
			Assert(block.IsOntable("B3"), "");
			Assert(block.IsOntable("B5"), "");
			block.Putdown("B2");
			Assert(block.IsClear("B2"), "");
			Assert(block.IsClear("B5"), "");
			Assert(block.IsClear("B6"), "");
			Assert(block.IsOn("B6", "B3"), "");
			Assert(block.IsOntable("B2"), "");
			Assert(block.IsOntable("B3"), "");
			Assert(block.IsOntable("B5"), "");
		}

		public void Test84() {
			Console.WriteLine("Test case 84");
			Init3();
			block.Unstack("B2", "B3");
			block.Putdown("B2");
			block.Unstack("B5", "B6");
			block.Putdown("B5");
			block.Pickup("B6");
			block.Stack("B6", "B3");
			block.Pickup("B2");
			block.Stack("B2", "B5");
			Assert(block.IsClear("B2"), "");
			Assert(block.IsClear("B6"), "");
			Assert(block.IsOn("B2", "B5"), "");
			Assert(block.IsOn("B6", "B3"), "");
			Assert(block.IsOntable("B3"), "");
			Assert(block.IsOntable("B5"), "");
		}

		public void Test85() {
			Console.WriteLine("Test case 85");
			Init3();
			block.Unstack("B2", "B3");
			block.Putdown("B2");
			block.Unstack("B5", "B6");
			block.Putdown("B5");
			block.Pickup("B6");
			block.Stack("B6", "B3");
			block.Pickup("B2");
			block.Stack("B2", "B6");
			Assert(block.IsClear("B2"), "");
			Assert(block.IsClear("B5"), "");
			Assert(block.IsOn("B2", "B6"), "");
			Assert(block.IsOn("B6", "B3"), "");
			Assert(block.IsOntable("B3"), "");
			Assert(block.IsOntable("B5"), "");
			block.Pickup("B5");
			Assert(block.IsClear("B2"), "");
			Assert(block.IsHolding("B5"), "");
			Assert(block.IsOn("B2", "B6"), "");
			Assert(block.IsOn("B6", "B3"), "");
			Assert(block.IsOntable("B3"), "");
			block.Putdown("B5");
			Assert(block.IsClear("B2"), "");
			Assert(block.IsClear("B5"), "");
			Assert(block.IsOn("B2", "B6"), "");
			Assert(block.IsOn("B6", "B3"), "");
			Assert(block.IsOntable("B3"), "");
			Assert(block.IsOntable("B5"), "");
		}

		public void Test86() {
			Console.WriteLine("Test case 86");
			Init3();
			block.Unstack("B2", "B3");
			block.Putdown("B2");
			block.Unstack("B5", "B6");
			block.Putdown("B5");
			block.Pickup("B6");
			block.Stack("B6", "B3");
			block.Pickup("B2");
			block.Stack("B2", "B6");
			block.Pickup("B5");
			block.Stack("B5", "B2");
			Assert(block.IsClear("B5"), "");
			Assert(block.IsOn("B2", "B6"), "");
			Assert(block.IsOn("B5", "B2"), "");
			Assert(block.IsOn("B6", "B3"), "");
			Assert(block.IsOntable("B3"), "");
			block.Unstack("B5", "B2");
			Assert(block.IsClear("B2"), "");
			Assert(block.IsHolding("B5"), "");
			Assert(block.IsOn("B2", "B6"), "");
			Assert(block.IsOn("B6", "B3"), "");
			Assert(block.IsOntable("B3"), "");
		}

		public void Test87() {
			Console.WriteLine("Test case 87");
			Init3();
			block.Unstack("B2", "B3");
			block.Putdown("B2");
			block.Unstack("B5", "B6");
			block.Putdown("B5");
			block.Pickup("B6");
			block.Stack("B6", "B3");
			block.Pickup("B2");
			block.Stack("B2", "B6");
			block.Unstack("B2", "B6");
			Assert(block.IsClear("B5"), "");
			Assert(block.IsClear("B6"), "");
			Assert(block.IsHolding("B2"), "");
			Assert(block.IsOn("B6", "B3"), "");
			Assert(block.IsOntable("B3"), "");
			Assert(block.IsOntable("B5"), "");
		}

		public void Test88() {
			Console.WriteLine("Test case 88");
			Init3();
			block.Unstack("B2", "B3");
			block.Putdown("B2");
			block.Unstack("B5", "B6");
			block.Putdown("B5");
			block.Pickup("B6");
			block.Stack("B6", "B3");
			block.Pickup("B5");
			Assert(block.IsClear("B2"), "");
			Assert(block.IsClear("B6"), "");
			Assert(block.IsHolding("B5"), "");
			Assert(block.IsOn("B6", "B3"), "");
			Assert(block.IsOntable("B2"), "");
			Assert(block.IsOntable("B3"), "");
			block.Putdown("B5");
			Assert(block.IsClear("B2"), "");
			Assert(block.IsClear("B5"), "");
			Assert(block.IsClear("B6"), "");
			Assert(block.IsOn("B6", "B3"), "");
			Assert(block.IsOntable("B2"), "");
			Assert(block.IsOntable("B3"), "");
			Assert(block.IsOntable("B5"), "");
		}

		public void Test89() {
			Console.WriteLine("Test case 89");
			Init3();
			block.Unstack("B2", "B3");
			block.Putdown("B2");
			block.Unstack("B5", "B6");
			block.Putdown("B5");
			block.Pickup("B6");
			block.Stack("B6", "B3");
			block.Pickup("B5");
			block.Stack("B5", "B2");
			Assert(block.IsClear("B5"), "");
			Assert(block.IsClear("B6"), "");
			Assert(block.IsOn("B5", "B2"), "");
			Assert(block.IsOn("B6", "B3"), "");
			Assert(block.IsOntable("B2"), "");
			Assert(block.IsOntable("B3"), "");
		}

		public void Test90() {
			Console.WriteLine("Test case 90");
			Init3();
			block.Unstack("B2", "B3");
			block.Putdown("B2");
			block.Unstack("B5", "B6");
			block.Putdown("B5");
			block.Pickup("B6");
			block.Stack("B6", "B3");
			block.Pickup("B5");
			block.Stack("B5", "B6");
			Assert(block.IsClear("B2"), "");
			Assert(block.IsClear("B5"), "");
			Assert(block.IsOn("B5", "B6"), "");
			Assert(block.IsOn("B6", "B3"), "");
			Assert(block.IsOntable("B2"), "");
			Assert(block.IsOntable("B3"), "");
			block.Pickup("B2");
			Assert(block.IsClear("B5"), "");
			Assert(block.IsHolding("B2"), "");
			Assert(block.IsOn("B5", "B6"), "");
			Assert(block.IsOn("B6", "B3"), "");
			Assert(block.IsOntable("B3"), "");
			block.Putdown("B2");
			Assert(block.IsClear("B2"), "");
			Assert(block.IsClear("B5"), "");
			Assert(block.IsOn("B5", "B6"), "");
			Assert(block.IsOn("B6", "B3"), "");
			Assert(block.IsOntable("B2"), "");
			Assert(block.IsOntable("B3"), "");
		}

		public void Test91() {
			Console.WriteLine("Test case 91");
			Init3();
			block.Unstack("B2", "B3");
			block.Putdown("B2");
			block.Unstack("B5", "B6");
			block.Putdown("B5");
			block.Pickup("B6");
			block.Stack("B6", "B3");
			block.Pickup("B5");
			block.Stack("B5", "B6");
			block.Pickup("B2");
			block.Stack("B2", "B5");
			Assert(block.IsClear("B2"), "");
			Assert(block.IsOn("B2", "B5"), "");
			Assert(block.IsOn("B5", "B6"), "");
			Assert(block.IsOn("B6", "B3"), "");
			Assert(block.IsOntable("B3"), "");
			block.Unstack("B2", "B5");
			Assert(block.IsClear("B5"), "");
			Assert(block.IsHolding("B2"), "");
			Assert(block.IsOn("B5", "B6"), "");
			Assert(block.IsOn("B6", "B3"), "");
			Assert(block.IsOntable("B3"), "");
		}

		public void Test92() {
			Console.WriteLine("Test case 92");
			Init3();
			block.Unstack("B2", "B3");
			block.Putdown("B2");
			block.Unstack("B5", "B6");
			block.Putdown("B5");
			block.Pickup("B6");
			block.Stack("B6", "B3");
			block.Pickup("B5");
			block.Stack("B5", "B6");
			block.Unstack("B5", "B6");
			Assert(block.IsClear("B2"), "");
			Assert(block.IsClear("B6"), "");
			Assert(block.IsHolding("B5"), "");
			Assert(block.IsOn("B6", "B3"), "");
			Assert(block.IsOntable("B2"), "");
			Assert(block.IsOntable("B3"), "");
		}

		public void Test93() {
			Console.WriteLine("Test case 93");
			Init3();
			block.Unstack("B2", "B3");
			block.Putdown("B2");
			block.Unstack("B5", "B6");
			block.Putdown("B5");
			block.Pickup("B6");
			block.Stack("B6", "B3");
			block.Unstack("B6", "B3");
			Assert(block.IsClear("B2"), "");
			Assert(block.IsClear("B3"), "");
			Assert(block.IsClear("B5"), "");
			Assert(block.IsHolding("B6"), "");
			Assert(block.IsOntable("B2"), "");
			Assert(block.IsOntable("B3"), "");
			Assert(block.IsOntable("B5"), "");
		}

		public void Test94() {
			Console.WriteLine("Test case 94");
			Init3();
			block.Unstack("B2", "B3");
			block.Putdown("B2");
			block.Unstack("B5", "B6");
			block.Putdown("B5");
			block.Pickup("B6");
			block.Stack("B6", "B5");
			Assert(block.IsClear("B2"), "");
			Assert(block.IsClear("B3"), "");
			Assert(block.IsClear("B6"), "");
			Assert(block.IsOn("B6", "B5"), "");
			Assert(block.IsOntable("B2"), "");
			Assert(block.IsOntable("B3"), "");
			Assert(block.IsOntable("B5"), "");
			block.Pickup("B2");
			Assert(block.IsClear("B3"), "");
			Assert(block.IsClear("B6"), "");
			Assert(block.IsHolding("B2"), "");
			Assert(block.IsOn("B6", "B5"), "");
			Assert(block.IsOntable("B3"), "");
			Assert(block.IsOntable("B5"), "");
		}

		public void Test95() {
			Console.WriteLine("Test case 95");
			Init3();
			block.Unstack("B2", "B3");
			block.Putdown("B2");
			block.Unstack("B5", "B6");
			block.Putdown("B5");
			block.Pickup("B6");
			block.Stack("B6", "B5");
			block.Pickup("B3");
			Assert(block.IsClear("B2"), "");
			Assert(block.IsClear("B6"), "");
			Assert(block.IsHolding("B3"), "");
			Assert(block.IsOn("B6", "B5"), "");
			Assert(block.IsOntable("B2"), "");
			Assert(block.IsOntable("B5"), "");
			block.Putdown("B3");
			Assert(block.IsClear("B2"), "");
			Assert(block.IsClear("B3"), "");
			Assert(block.IsClear("B6"), "");
			Assert(block.IsOn("B6", "B5"), "");
			Assert(block.IsOntable("B2"), "");
			Assert(block.IsOntable("B3"), "");
			Assert(block.IsOntable("B5"), "");
		}

		public void Test96() {
			Console.WriteLine("Test case 96");
			Init3();
			block.Unstack("B2", "B3");
			block.Putdown("B2");
			block.Unstack("B5", "B6");
			block.Putdown("B5");
			block.Pickup("B6");
			block.Stack("B6", "B5");
			block.Pickup("B3");
			block.Stack("B3", "B2");
			Assert(block.IsClear("B3"), "");
			Assert(block.IsClear("B6"), "");
			Assert(block.IsOn("B3", "B2"), "");
			Assert(block.IsOn("B6", "B5"), "");
			Assert(block.IsOntable("B2"), "");
			Assert(block.IsOntable("B5"), "");
		}

		public void Test97() {
			Console.WriteLine("Test case 97");
			Init3();
			block.Unstack("B2", "B3");
			block.Putdown("B2");
			block.Unstack("B5", "B6");
			block.Putdown("B5");
			block.Pickup("B6");
			block.Stack("B6", "B5");
			block.Pickup("B3");
			block.Stack("B3", "B6");
			Assert(block.IsClear("B2"), "");
			Assert(block.IsClear("B3"), "");
			Assert(block.IsOn("B3", "B6"), "");
			Assert(block.IsOn("B6", "B5"), "");
			Assert(block.IsOntable("B2"), "");
			Assert(block.IsOntable("B5"), "");
			block.Pickup("B2");
			Assert(block.IsClear("B3"), "");
			Assert(block.IsHolding("B2"), "");
			Assert(block.IsOn("B3", "B6"), "");
			Assert(block.IsOn("B6", "B5"), "");
			Assert(block.IsOntable("B5"), "");
			block.Putdown("B2");
			Assert(block.IsClear("B2"), "");
			Assert(block.IsClear("B3"), "");
			Assert(block.IsOn("B3", "B6"), "");
			Assert(block.IsOn("B6", "B5"), "");
			Assert(block.IsOntable("B2"), "");
			Assert(block.IsOntable("B5"), "");
		}

		public void Test98() {
			Console.WriteLine("Test case 98");
			Init3();
			block.Unstack("B2", "B3");
			block.Putdown("B2");
			block.Unstack("B5", "B6");
			block.Putdown("B5");
			block.Pickup("B6");
			block.Stack("B6", "B5");
			block.Pickup("B3");
			block.Stack("B3", "B6");
			block.Pickup("B2");
			block.Stack("B2", "B3");
			Assert(block.IsClear("B2"), "");
			Assert(block.IsOn("B2", "B3"), "");
			Assert(block.IsOn("B3", "B6"), "");
			Assert(block.IsOn("B6", "B5"), "");
			Assert(block.IsOntable("B5"), "");
			block.Unstack("B2", "B3");
			Assert(block.IsClear("B3"), "");
			Assert(block.IsHolding("B2"), "");
			Assert(block.IsOn("B3", "B6"), "");
			Assert(block.IsOn("B6", "B5"), "");
			Assert(block.IsOntable("B5"), "");
		}

		public void Test99() {
			Console.WriteLine("Test case 99");
			Init3();
			block.Unstack("B2", "B3");
			block.Putdown("B2");
			block.Unstack("B5", "B6");
			block.Putdown("B5");
			block.Pickup("B6");
			block.Stack("B6", "B5");
			block.Pickup("B3");
			block.Stack("B3", "B6");
			block.Unstack("B3", "B6");
			Assert(block.IsClear("B2"), "");
			Assert(block.IsClear("B6"), "");
			Assert(block.IsHolding("B3"), "");
			Assert(block.IsOn("B6", "B5"), "");
			Assert(block.IsOntable("B2"), "");
			Assert(block.IsOntable("B5"), "");
		}

		public void Test100() {
			Console.WriteLine("Test case 100");
			Init3();
			block.Unstack("B2", "B3");
			block.Putdown("B2");
			block.Unstack("B5", "B6");
			block.Putdown("B5");
			block.Pickup("B6");
			block.Stack("B6", "B5");
			block.Unstack("B6", "B5");
			Assert(block.IsClear("B2"), "");
			Assert(block.IsClear("B3"), "");
			Assert(block.IsClear("B5"), "");
			Assert(block.IsHolding("B6"), "");
			Assert(block.IsOntable("B2"), "");
			Assert(block.IsOntable("B3"), "");
			Assert(block.IsOntable("B5"), "");
		}

		public void Test101() {
			Console.WriteLine("Test case 101");
			Init3();
			block.Unstack("B2", "B3");
			block.Putdown("B2");
			block.Unstack("B5", "B6");
			block.Stack("B5", "B2");
			Assert(block.IsClear("B3"), "3_1_1_3_2");
			Assert(block.IsClear("B5"), "3_1_1_3_2");
			Assert(block.IsClear("B6"), "3_1_1_3_2");
			Assert(block.IsOn("B5", "B2"), "3_1_1_3_2");
			Assert(block.IsOntable("B2"), "3_1_1_3_2");
			Assert(block.IsOntable("B3"), "3_1_1_3_2");
			Assert(block.IsOntable("B6"), "3_1_1_3_2");
			block.Pickup("B3");
			Assert(block.IsClear("B5"), "3_1_1_3_2_1");
			Assert(block.IsClear("B6"), "3_1_1_3_2_1");
			Assert(block.IsHolding("B3"), "3_1_1_3_2_1");
			Assert(block.IsOn("B5", "B2"), "3_1_1_3_2_1");
			Assert(block.IsOntable("B2"), "3_1_1_3_2_1");
			Assert(block.IsOntable("B6"), "3_1_1_3_2_1");
			block.Putdown("B3");
			Assert(block.IsClear("B3"), "");
			Assert(block.IsClear("B5"), "");
			Assert(block.IsClear("B6"), "");
			Assert(block.IsOn("B5", "B2"), "");
			Assert(block.IsOntable("B2"), "");
			Assert(block.IsOntable("B3"), "");
			Assert(block.IsOntable("B6"), "");
		}

		public void Test102() {
			Console.WriteLine("Test case 102");
			Init3();
			block.Unstack("B2", "B3");
			block.Putdown("B2");
			block.Unstack("B5", "B6");
			block.Stack("B5", "B2");
			block.Pickup("B3");
			block.Stack("B3", "B5");
			Assert(block.IsClear("B3"), "");
			Assert(block.IsClear("B6"), "");
			Assert(block.IsOn("B3", "B5"), "");
			Assert(block.IsOn("B5", "B2"), "");
			Assert(block.IsOntable("B2"), "");
			Assert(block.IsOntable("B6"), "");
			block.Pickup("B6");
			Assert(block.IsClear("B3"), "");
			Assert(block.IsHolding("B6"), "");
			Assert(block.IsOn("B3", "B5"), "");
			Assert(block.IsOn("B5", "B2"), "");
			Assert(block.IsOntable("B2"), "");
			block.Putdown("B6");
			Assert(block.IsClear("B3"), "");
			Assert(block.IsClear("B6"), "");
			Assert(block.IsOn("B3", "B5"), "");
			Assert(block.IsOn("B5", "B2"), "");
			Assert(block.IsOntable("B2"), "");
			Assert(block.IsOntable("B6"), "");
		}

		public void Test103() {
			Console.WriteLine("Test case 103");
			Init3();
			block.Unstack("B2", "B3");
			block.Putdown("B2");
			block.Unstack("B5", "B6");
			block.Stack("B5", "B2");
			block.Pickup("B3");
			block.Stack("B3", "B5");
			block.Pickup("B6");
			block.Stack("B6", "B3");
			Assert(block.IsClear("B6"), "");
			Assert(block.IsOn("B3", "B5"), "");
			Assert(block.IsOn("B5", "B2"), "");
			Assert(block.IsOn("B6", "B3"), "");
			Assert(block.IsOntable("B2"), "");
			block.Unstack("B6", "B3");
			Assert(block.IsClear("B3"), "");
			Assert(block.IsHolding("B6"), "");
			Assert(block.IsOn("B3", "B5"), "");
			Assert(block.IsOn("B5", "B2"), "");
			Assert(block.IsOntable("B2"), "");
		}

		public void Test104() {
			Console.WriteLine("Test case 104");
			Init3();
			block.Unstack("B2", "B3");
			block.Putdown("B2");
			block.Unstack("B5", "B6");
			block.Stack("B5", "B2");
			block.Pickup("B3");
			block.Stack("B3", "B5");
			block.Unstack("B3", "B5");
			Assert(block.IsClear("B5"), "");
			Assert(block.IsClear("B6"), "");
			Assert(block.IsHolding("B3"), "");
			Assert(block.IsOn("B5", "B2"), "");
			Assert(block.IsOntable("B2"), "");
			Assert(block.IsOntable("B6"), "");
		}

		public void Test105() {
			Console.WriteLine("Test case 105");
			Init3();
			block.Unstack("B2", "B3");
			block.Putdown("B2");
			block.Unstack("B5", "B6");
			block.Stack("B5", "B2");
			block.Pickup("B3");
			block.Stack("B3", "B6");
			Assert(block.IsClear("B3"), "");
			Assert(block.IsClear("B5"), "");
			Assert(block.IsOn("B3", "B6"), "");
			Assert(block.IsOn("B5", "B2"), "");
			Assert(block.IsOntable("B2"), "");
			Assert(block.IsOntable("B6"), "");
			block.Unstack("B3", "B6");
			Assert(block.IsClear("B5"), "");
			Assert(block.IsClear("B6"), "");
			Assert(block.IsHolding("B3"), "");
			Assert(block.IsOn("B5", "B2"), "");
			Assert(block.IsOntable("B2"), "");
			Assert(block.IsOntable("B6"), "");
		}

		public void Test106() {
			Console.WriteLine("Test case 106");
			Init3();
			block.Unstack("B2", "B3");
			block.Putdown("B2");
			block.Unstack("B5", "B6");
			block.Stack("B5", "B2");
			block.Pickup("B3");
			block.Stack("B3", "B6");
			block.Unstack("B5", "B2");
			Assert(block.IsClear("B2"), "");
			Assert(block.IsClear("B3"), "");
			Assert(block.IsHolding("B5"), "");
			Assert(block.IsOn("B3", "B6"), "");
			Assert(block.IsOntable("B2"), "");
			Assert(block.IsOntable("B6"), "");
		}

		public void Test107() {
			Console.WriteLine("Test case 107");
			Init3();
			block.Unstack("B2", "B3");
			block.Putdown("B2");
			block.Unstack("B5", "B6");
			block.Stack("B5", "B2");
			block.Pickup("B6");
			Assert(block.IsClear("B3"), "3_1_1_3_2_2");
			Assert(block.IsClear("B5"), "3_1_1_3_2_2");
			Assert(block.IsHolding("B6"), "3_1_1_3_2_2");
			Assert(block.IsOn("B5", "B2"), "3_1_1_3_2_2");
			Assert(block.IsOntable("B2"), "3_1_1_3_2_2");
			Assert(block.IsOntable("B3"), "3_1_1_3_2_2");
			block.Putdown("B6");
			Assert(block.IsClear("B3"), "");
			Assert(block.IsClear("B5"), "");
			Assert(block.IsClear("B6"), "");
			Assert(block.IsOn("B5", "B2"), "");
			Assert(block.IsOntable("B2"), "");
			Assert(block.IsOntable("B3"), "");
			Assert(block.IsOntable("B6"), "");
		}

		public void Test108() {
			Console.WriteLine("Test case 108");
			Init3();
			block.Unstack("B2", "B3");
			block.Putdown("B2");
			block.Unstack("B5", "B6");
			block.Stack("B5", "B2");
			block.Pickup("B6");
			block.Stack("B6", "B3");
			Assert(block.IsClear("B5"), "");
			Assert(block.IsClear("B6"), "");
			Assert(block.IsOn("B5", "B2"), "");
			Assert(block.IsOn("B6", "B3"), "");
			Assert(block.IsOntable("B2"), "");
			Assert(block.IsOntable("B3"), "");
			block.Unstack("B5", "B2");
			Assert(block.IsClear("B2"), "");
			Assert(block.IsClear("B6"), "");
			Assert(block.IsHolding("B5"), "");
			Assert(block.IsOn("B6", "B3"), "");
			Assert(block.IsOntable("B2"), "");
			Assert(block.IsOntable("B3"), "");
		}

		public void Test109() {
			Console.WriteLine("Test case 109");
			Init3();
			block.Unstack("B2", "B3");
			block.Putdown("B2");
			block.Unstack("B5", "B6");
			block.Stack("B5", "B2");
			block.Pickup("B6");
			block.Stack("B6", "B3");
			block.Unstack("B6", "B3");
			Assert(block.IsClear("B3"), "");
			Assert(block.IsClear("B5"), "");
			Assert(block.IsHolding("B6"), "");
			Assert(block.IsOn("B5", "B2"), "");
			Assert(block.IsOntable("B2"), "");
			Assert(block.IsOntable("B3"), "");
		}

		public void Test110() {
			Console.WriteLine("Test case 110");
			Init3();
			block.Unstack("B2", "B3");
			block.Putdown("B2");
			block.Unstack("B5", "B6");
			block.Stack("B5", "B2");
			block.Pickup("B6");
			block.Stack("B6", "B5");
			Assert(block.IsClear("B3"), "");
			Assert(block.IsClear("B6"), "");
			Assert(block.IsOn("B5", "B2"), "");
			Assert(block.IsOn("B6", "B5"), "");
			Assert(block.IsOntable("B2"), "");
			Assert(block.IsOntable("B3"), "");
			block.Pickup("B3");
			Assert(block.IsClear("B6"), "");
			Assert(block.IsHolding("B3"), "");
			Assert(block.IsOn("B5", "B2"), "");
			Assert(block.IsOn("B6", "B5"), "");
			Assert(block.IsOntable("B2"), "");
			block.Putdown("B3");
			Assert(block.IsClear("B3"), "");
			Assert(block.IsClear("B6"), "");
			Assert(block.IsOn("B5", "B2"), "");
			Assert(block.IsOn("B6", "B5"), "");
			Assert(block.IsOntable("B2"), "");
			Assert(block.IsOntable("B3"), "");
		}

		public void Test111() {
			Console.WriteLine("Test case 111");
			Init3();
			block.Unstack("B2", "B3");
			block.Putdown("B2");
			block.Unstack("B5", "B6");
			block.Stack("B5", "B2");
			block.Pickup("B6");
			block.Stack("B6", "B5");
			block.Pickup("B3");
			block.Stack("B3", "B6");
			Assert(block.IsClear("B3"), "");
			Assert(block.IsOn("B3", "B6"), "");
			Assert(block.IsOn("B5", "B2"), "");
			Assert(block.IsOn("B6", "B5"), "");
			Assert(block.IsOntable("B2"), "");
			block.Unstack("B3", "B6");
			Assert(block.IsClear("B6"), "");
			Assert(block.IsHolding("B3"), "");
			Assert(block.IsOn("B5", "B2"), "");
			Assert(block.IsOn("B6", "B5"), "");
			Assert(block.IsOntable("B2"), "");
		}

		public void Test112() {
			Console.WriteLine("Test case 112");
			Init3();
			block.Unstack("B2", "B3");
			block.Putdown("B2");
			block.Unstack("B5", "B6");
			block.Stack("B5", "B2");
			block.Pickup("B6");
			block.Stack("B6", "B5");
			block.Unstack("B6", "B5");
			Assert(block.IsClear("B3"), "");
			Assert(block.IsClear("B5"), "");
			Assert(block.IsHolding("B6"), "");
			Assert(block.IsOn("B5", "B2"), "");
			Assert(block.IsOntable("B2"), "");
			Assert(block.IsOntable("B3"), "");
		}

		public void Test113() {
			Console.WriteLine("Test case 113");
			Init3();
			block.Unstack("B2", "B3");
			block.Putdown("B2");
			block.Unstack("B5", "B6");
			block.Stack("B5", "B2");
			block.Unstack("B5", "B2");
			Assert(block.IsClear("B2"), "3_1_1_3_2_3");
			Assert(block.IsClear("B3"), "3_1_1_3_2_3");
			Assert(block.IsClear("B6"), "3_1_1_3_2_3");
			Assert(block.IsHolding("B5"), "3_1_1_3_2_3");
			Assert(block.IsOntable("B2"), "3_1_1_3_2_3");
			Assert(block.IsOntable("B3"), "3_1_1_3_2_3");
			Assert(block.IsOntable("B6"), "3_1_1_3_2_3");
		}

		public void Test114() {
			Console.WriteLine("Test case 114");
			Init3();
			block.Unstack("B2", "B3");
			block.Putdown("B2");
			block.Unstack("B5", "B6");
			block.Stack("B5", "B3");
			Assert(block.IsClear("B2"), "3_1_1_3_3");
			Assert(block.IsClear("B5"), "3_1_1_3_3");
			Assert(block.IsClear("B6"), "3_1_1_3_3");
			Assert(block.IsOn("B5", "B3"), "3_1_1_3_3");
			Assert(block.IsOntable("B2"), "3_1_1_3_3");
			Assert(block.IsOntable("B3"), "3_1_1_3_3");
			Assert(block.IsOntable("B6"), "3_1_1_3_3");
			block.Pickup("B2");
			Assert(block.IsClear("B5"), "3_1_1_3_3_1");
			Assert(block.IsClear("B6"), "3_1_1_3_3_1");
			Assert(block.IsHolding("B2"), "3_1_1_3_3_1");
			Assert(block.IsOn("B5", "B3"), "3_1_1_3_3_1");
			Assert(block.IsOntable("B3"), "3_1_1_3_3_1");
			Assert(block.IsOntable("B6"), "3_1_1_3_3_1");
			block.Putdown("B2");
			Assert(block.IsClear("B2"), "");
			Assert(block.IsClear("B5"), "");
			Assert(block.IsClear("B6"), "");
			Assert(block.IsOn("B5", "B3"), "");
			Assert(block.IsOntable("B2"), "");
			Assert(block.IsOntable("B3"), "");
			Assert(block.IsOntable("B6"), "");
		}

		public void Test115() {
			Console.WriteLine("Test case 115");
			Init3();
			block.Unstack("B2", "B3");
			block.Putdown("B2");
			block.Unstack("B5", "B6");
			block.Stack("B5", "B3");
			block.Pickup("B2");
			block.Stack("B2", "B5");
			Assert(block.IsClear("B2"), "");
			Assert(block.IsClear("B6"), "");
			Assert(block.IsOn("B2", "B5"), "");
			Assert(block.IsOn("B5", "B3"), "");
			Assert(block.IsOntable("B3"), "");
			Assert(block.IsOntable("B6"), "");
			block.Pickup("B6");
			Assert(block.IsClear("B2"), "");
			Assert(block.IsHolding("B6"), "");
			Assert(block.IsOn("B2", "B5"), "");
			Assert(block.IsOn("B5", "B3"), "");
			Assert(block.IsOntable("B3"), "");
			block.Putdown("B6");
			Assert(block.IsClear("B2"), "");
			Assert(block.IsClear("B6"), "");
			Assert(block.IsOn("B2", "B5"), "");
			Assert(block.IsOn("B5", "B3"), "");
			Assert(block.IsOntable("B3"), "");
			Assert(block.IsOntable("B6"), "");
		}

		public void Test116() {
			Console.WriteLine("Test case 116");
			Init3();
			block.Unstack("B2", "B3");
			block.Putdown("B2");
			block.Unstack("B5", "B6");
			block.Stack("B5", "B3");
			block.Pickup("B2");
			block.Stack("B2", "B5");
			block.Pickup("B6");
			block.Stack("B6", "B2");
			Assert(block.IsClear("B6"), "");
			Assert(block.IsOn("B2", "B5"), "");
			Assert(block.IsOn("B5", "B3"), "");
			Assert(block.IsOn("B6", "B2"), "");
			Assert(block.IsOntable("B3"), "");
			block.Unstack("B6", "B2");
			Assert(block.IsClear("B2"), "");
			Assert(block.IsHolding("B6"), "");
			Assert(block.IsOn("B2", "B5"), "");
			Assert(block.IsOn("B5", "B3"), "");
			Assert(block.IsOntable("B3"), "");
		}

		public void Test117() {
			Console.WriteLine("Test case 117");
			Init3();
			block.Unstack("B2", "B3");
			block.Putdown("B2");
			block.Unstack("B5", "B6");
			block.Stack("B5", "B3");
			block.Pickup("B2");
			block.Stack("B2", "B5");
			block.Unstack("B2", "B5");
			Assert(block.IsClear("B5"), "");
			Assert(block.IsClear("B6"), "");
			Assert(block.IsHolding("B2"), "");
			Assert(block.IsOn("B5", "B3"), "");
			Assert(block.IsOntable("B3"), "");
			Assert(block.IsOntable("B6"), "");
		}

		public void Test118() {
			Console.WriteLine("Test case 118");
			Init3();
			block.Unstack("B2", "B3");
			block.Putdown("B2");
			block.Unstack("B5", "B6");
			block.Stack("B5", "B3");
			block.Pickup("B2");
			block.Stack("B2", "B6");
			Assert(block.IsClear("B2"), "");
			Assert(block.IsClear("B5"), "");
			Assert(block.IsOn("B2", "B6"), "");
			Assert(block.IsOn("B5", "B3"), "");
			Assert(block.IsOntable("B3"), "");
			Assert(block.IsOntable("B6"), "");
			block.Unstack("B2", "B6");
			Assert(block.IsClear("B5"), "");
			Assert(block.IsClear("B6"), "");
			Assert(block.IsHolding("B2"), "");
			Assert(block.IsOn("B5", "B3"), "");
			Assert(block.IsOntable("B3"), "");
			Assert(block.IsOntable("B6"), "");
		}

		public void Test119() {
			Console.WriteLine("Test case 119");
			Init3();
			block.Unstack("B2", "B3");
			block.Putdown("B2");
			block.Unstack("B5", "B6");
			block.Stack("B5", "B3");
			block.Pickup("B2");
			block.Stack("B2", "B6");
			block.Unstack("B5", "B3");
			Assert(block.IsClear("B2"), "");
			Assert(block.IsClear("B3"), "");
			Assert(block.IsHolding("B5"), "");
			Assert(block.IsOn("B2", "B6"), "");
			Assert(block.IsOntable("B3"), "");
			Assert(block.IsOntable("B6"), "");
		}

		public void Test120() {
			Console.WriteLine("Test case 120");
			Init3();
			block.Unstack("B2", "B3");
			block.Putdown("B2");
			block.Unstack("B5", "B6");
			block.Stack("B5", "B3");
			block.Pickup("B6");
			Assert(block.IsClear("B2"), "3_1_1_3_3_2");
			Assert(block.IsClear("B5"), "3_1_1_3_3_2");
			Assert(block.IsHolding("B6"), "3_1_1_3_3_2");
			Assert(block.IsOn("B5", "B3"), "3_1_1_3_3_2");
			Assert(block.IsOntable("B2"), "3_1_1_3_3_2");
			Assert(block.IsOntable("B3"), "3_1_1_3_3_2");
			block.Putdown("B6");
			Assert(block.IsClear("B2"), "");
			Assert(block.IsClear("B5"), "");
			Assert(block.IsClear("B6"), "");
			Assert(block.IsOn("B5", "B3"), "");
			Assert(block.IsOntable("B2"), "");
			Assert(block.IsOntable("B3"), "");
			Assert(block.IsOntable("B6"), "");
		}

		public void Test121() {
			Console.WriteLine("Test case 121");
			Init3();
			block.Unstack("B2", "B3");
			block.Putdown("B2");
			block.Unstack("B5", "B6");
			block.Stack("B5", "B3");
			block.Pickup("B6");
			block.Stack("B6", "B2");
			Assert(block.IsClear("B5"), "");
			Assert(block.IsClear("B6"), "");
			Assert(block.IsOn("B5", "B3"), "");
			Assert(block.IsOn("B6", "B2"), "");
			Assert(block.IsOntable("B2"), "");
			Assert(block.IsOntable("B3"), "");
			block.Unstack("B5", "B3");
			Assert(block.IsClear("B3"), "");
			Assert(block.IsClear("B6"), "");
			Assert(block.IsHolding("B5"), "");
			Assert(block.IsOn("B6", "B2"), "");
			Assert(block.IsOntable("B2"), "");
			Assert(block.IsOntable("B3"), "");
		}

		public void Test122() {
			Console.WriteLine("Test case 122");
			Init3();
			block.Unstack("B2", "B3");
			block.Putdown("B2");
			block.Unstack("B5", "B6");
			block.Stack("B5", "B3");
			block.Pickup("B6");
			block.Stack("B6", "B2");
			block.Unstack("B6", "B2");
			Assert(block.IsClear("B2"), "");
			Assert(block.IsClear("B5"), "");
			Assert(block.IsHolding("B6"), "");
			Assert(block.IsOn("B5", "B3"), "");
			Assert(block.IsOntable("B2"), "");
			Assert(block.IsOntable("B3"), "");
		}

		public void Test123() {
			Console.WriteLine("Test case 123");
			Init3();
			block.Unstack("B2", "B3");
			block.Putdown("B2");
			block.Unstack("B5", "B6");
			block.Stack("B5", "B3");
			block.Pickup("B6");
			block.Stack("B6", "B5");
			Assert(block.IsClear("B2"), "");
			Assert(block.IsClear("B6"), "");
			Assert(block.IsOn("B5", "B3"), "");
			Assert(block.IsOn("B6", "B5"), "");
			Assert(block.IsOntable("B2"), "");
			Assert(block.IsOntable("B3"), "");
			block.Pickup("B2");
			Assert(block.IsClear("B6"), "");
			Assert(block.IsHolding("B2"), "");
			Assert(block.IsOn("B5", "B3"), "");
			Assert(block.IsOn("B6", "B5"), "");
			Assert(block.IsOntable("B3"), "");
			block.Putdown("B2");
			Assert(block.IsClear("B2"), "");
			Assert(block.IsClear("B6"), "");
			Assert(block.IsOn("B5", "B3"), "");
			Assert(block.IsOn("B6", "B5"), "");
			Assert(block.IsOntable("B2"), "");
			Assert(block.IsOntable("B3"), "");
		}

		public void Test124() {
			Console.WriteLine("Test case 124");
			Init3();
			block.Unstack("B2", "B3");
			block.Putdown("B2");
			block.Unstack("B5", "B6");
			block.Stack("B5", "B3");
			block.Pickup("B6");
			block.Stack("B6", "B5");
			block.Pickup("B2");
			block.Stack("B2", "B6");
			Assert(block.IsClear("B2"), "");
			Assert(block.IsOn("B2", "B6"), "");
			Assert(block.IsOn("B5", "B3"), "");
			Assert(block.IsOn("B6", "B5"), "");
			Assert(block.IsOntable("B3"), "");
			block.Unstack("B2", "B6");
			Assert(block.IsClear("B6"), "");
			Assert(block.IsHolding("B2"), "");
			Assert(block.IsOn("B5", "B3"), "");
			Assert(block.IsOn("B6", "B5"), "");
			Assert(block.IsOntable("B3"), "");
		}

		public void Test125() {
			Console.WriteLine("Test case 125");
			Init3();
			block.Unstack("B2", "B3");
			block.Putdown("B2");
			block.Unstack("B5", "B6");
			block.Stack("B5", "B3");
			block.Pickup("B6");
			block.Stack("B6", "B5");
			block.Unstack("B6", "B5");
			Assert(block.IsClear("B2"), "");
			Assert(block.IsClear("B5"), "");
			Assert(block.IsHolding("B6"), "");
			Assert(block.IsOn("B5", "B3"), "");
			Assert(block.IsOntable("B2"), "");
			Assert(block.IsOntable("B3"), "");
		}

		public void Test126() {
			Console.WriteLine("Test case 126");
			Init3();
			block.Unstack("B2", "B3");
			block.Putdown("B2");
			block.Unstack("B5", "B6");
			block.Stack("B5", "B3");
			block.Unstack("B5", "B3");
			Assert(block.IsClear("B2"), "3_1_1_3_3_3");
			Assert(block.IsClear("B3"), "3_1_1_3_3_3");
			Assert(block.IsClear("B6"), "3_1_1_3_3_3");
			Assert(block.IsHolding("B5"), "3_1_1_3_3_3");
			Assert(block.IsOntable("B2"), "3_1_1_3_3_3");
			Assert(block.IsOntable("B3"), "3_1_1_3_3_3");
			Assert(block.IsOntable("B6"), "3_1_1_3_3_3");
		}

		public void Test127() {
			Console.WriteLine("Test case 127");
			Init3();
			block.Unstack("B2", "B3");
			block.Putdown("B2");
			block.Unstack("B5", "B6");
			block.Stack("B5", "B6");
			Assert(block.IsClear("B2"), "3_1_1_3_4");
			Assert(block.IsClear("B3"), "3_1_1_3_4");
			Assert(block.IsClear("B5"), "3_1_1_3_4");
			Assert(block.IsOn("B5", "B6"), "3_1_1_3_4");
			Assert(block.IsOntable("B2"), "3_1_1_3_4");
			Assert(block.IsOntable("B3"), "3_1_1_3_4");
			Assert(block.IsOntable("B6"), "3_1_1_3_4");
		}

		public void Test128() {
			Console.WriteLine("Test case 128");
			Init3();
			block.Unstack("B2", "B3");
			block.Stack("B2", "B3");
			Assert(block.IsClear("B2"), "3_1_2");
			Assert(block.IsClear("B5"), "3_1_2");
			Assert(block.IsOn("B2", "B3"), "3_1_2");
			Assert(block.IsOn("B5", "B6"), "3_1_2");
			Assert(block.IsOntable("B3"), "3_1_2");
			Assert(block.IsOntable("B6"), "3_1_2");
		}

		public void Test129() {
			Console.WriteLine("Test case 129");
			Init3();
			block.Unstack("B2", "B3");
			block.Stack("B2", "B5");
			Assert(block.IsClear("B2"), "3_1_3");
			Assert(block.IsClear("B3"), "3_1_3");
			Assert(block.IsOn("B2", "B5"), "3_1_3");
			Assert(block.IsOn("B5", "B6"), "3_1_3");
			Assert(block.IsOntable("B3"), "3_1_3");
			Assert(block.IsOntable("B6"), "3_1_3");
			block.Pickup("B3");
			Assert(block.IsClear("B2"), "3_1_3_1");
			Assert(block.IsHolding("B3"), "3_1_3_1");
			Assert(block.IsOn("B2", "B5"), "3_1_3_1");
			Assert(block.IsOn("B5", "B6"), "3_1_3_1");
			Assert(block.IsOntable("B6"), "3_1_3_1");
			block.Putdown("B3");
			Assert(block.IsClear("B2"), "3_1_3_1_1");
			Assert(block.IsClear("B3"), "3_1_3_1_1");
			Assert(block.IsOn("B2", "B5"), "3_1_3_1_1");
			Assert(block.IsOn("B5", "B6"), "3_1_3_1_1");
			Assert(block.IsOntable("B3"), "3_1_3_1_1");
			Assert(block.IsOntable("B6"), "3_1_3_1_1");
		}

		public void Test130() {
			Console.WriteLine("Test case 130");
			Init3();
			block.Unstack("B2", "B3");
			block.Stack("B2", "B5");
			block.Pickup("B3");
			block.Stack("B3", "B2");
			Assert(block.IsClear("B3"), "3_1_3_1_2");
			Assert(block.IsOn("B2", "B5"), "3_1_3_1_2");
			Assert(block.IsOn("B3", "B2"), "3_1_3_1_2");
			Assert(block.IsOn("B5", "B6"), "3_1_3_1_2");
			Assert(block.IsOntable("B6"), "3_1_3_1_2");
			block.Unstack("B3", "B2");
			Assert(block.IsClear("B2"), "3_1_3_1_2_1");
			Assert(block.IsHolding("B3"), "3_1_3_1_2_1");
			Assert(block.IsOn("B2", "B5"), "3_1_3_1_2_1");
			Assert(block.IsOn("B5", "B6"), "3_1_3_1_2_1");
			Assert(block.IsOntable("B6"), "3_1_3_1_2_1");
		}

		public void Test131() {
			Console.WriteLine("Test case 131");
			Init3();
			block.Unstack("B2", "B3");
			block.Stack("B2", "B5");
			block.Unstack("B2", "B5");
			Assert(block.IsClear("B3"), "3_1_3_2");
			Assert(block.IsClear("B5"), "3_1_3_2");
			Assert(block.IsHolding("B2"), "3_1_3_2");
			Assert(block.IsOn("B5", "B6"), "3_1_3_2");
			Assert(block.IsOntable("B3"), "3_1_3_2");
			Assert(block.IsOntable("B6"), "3_1_3_2");
		}

		public void Test132() {
			Console.WriteLine("Test case 132");
			Init3();
			block.Unstack("B5", "B6");
			Assert(block.IsClear("B2"), "3_2");
			Assert(block.IsClear("B6"), "3_2");
			Assert(block.IsHolding("B5"), "3_2");
			Assert(block.IsOn("B2", "B3"), "3_2");
			Assert(block.IsOntable("B3"), "3_2");
			Assert(block.IsOntable("B6"), "3_2");
			block.Putdown("B5");
			Assert(block.IsClear("B2"), "3_2_1");
			Assert(block.IsClear("B5"), "3_2_1");
			Assert(block.IsClear("B6"), "3_2_1");
			Assert(block.IsOn("B2", "B3"), "3_2_1");
			Assert(block.IsOntable("B3"), "3_2_1");
			Assert(block.IsOntable("B5"), "3_2_1");
			Assert(block.IsOntable("B6"), "3_2_1");
			block.Pickup("B5");
			Assert(block.IsClear("B2"), "3_2_1_1");
			Assert(block.IsClear("B6"), "3_2_1_1");
			Assert(block.IsHolding("B5"), "3_2_1_1");
			Assert(block.IsOn("B2", "B3"), "3_2_1_1");
			Assert(block.IsOntable("B3"), "3_2_1_1");
			Assert(block.IsOntable("B6"), "3_2_1_1");
		}

		public void Test133() {
			Console.WriteLine("Test case 133");
			Init3();
			block.Unstack("B5", "B6");
			block.Putdown("B5");
			block.Pickup("B6");
			Assert(block.IsClear("B2"), "3_2_1_2");
			Assert(block.IsClear("B5"), "3_2_1_2");
			Assert(block.IsHolding("B6"), "3_2_1_2");
			Assert(block.IsOn("B2", "B3"), "3_2_1_2");
			Assert(block.IsOntable("B3"), "3_2_1_2");
			Assert(block.IsOntable("B5"), "3_2_1_2");
			block.Putdown("B6");
			Assert(block.IsClear("B2"), "3_2_1_2_1");
			Assert(block.IsClear("B5"), "3_2_1_2_1");
			Assert(block.IsClear("B6"), "3_2_1_2_1");
			Assert(block.IsOn("B2", "B3"), "3_2_1_2_1");
			Assert(block.IsOntable("B3"), "3_2_1_2_1");
			Assert(block.IsOntable("B5"), "3_2_1_2_1");
			Assert(block.IsOntable("B6"), "3_2_1_2_1");
		}

		public void Test134() {
			Console.WriteLine("Test case 134");
			Init3();
			block.Unstack("B5", "B6");
			block.Putdown("B5");
			block.Pickup("B6");
			block.Stack("B6", "B2");
			Assert(block.IsClear("B5"), "3_2_1_2_2");
			Assert(block.IsClear("B6"), "3_2_1_2_2");
			Assert(block.IsOn("B2", "B3"), "3_2_1_2_2");
			Assert(block.IsOn("B6", "B2"), "3_2_1_2_2");
			Assert(block.IsOntable("B3"), "3_2_1_2_2");
			Assert(block.IsOntable("B5"), "3_2_1_2_2");
			block.Pickup("B5");
			Assert(block.IsClear("B6"), "3_2_1_2_2_1");
			Assert(block.IsHolding("B5"), "3_2_1_2_2_1");
			Assert(block.IsOn("B2", "B3"), "3_2_1_2_2_1");
			Assert(block.IsOn("B6", "B2"), "3_2_1_2_2_1");
			Assert(block.IsOntable("B3"), "3_2_1_2_2_1");
			block.Putdown("B5");
			Assert(block.IsClear("B5"), "");
			Assert(block.IsClear("B6"), "");
			Assert(block.IsOn("B2", "B3"), "");
			Assert(block.IsOn("B6", "B2"), "");
			Assert(block.IsOntable("B3"), "");
			Assert(block.IsOntable("B5"), "");
		}

		public void Test135() {
			Console.WriteLine("Test case 135");
			Init3();
			block.Unstack("B5", "B6");
			block.Putdown("B5");
			block.Pickup("B6");
			block.Stack("B6", "B2");
			block.Pickup("B5");
			block.Stack("B5", "B6");
			Assert(block.IsClear("B5"), "");
			Assert(block.IsOn("B2", "B3"), "");
			Assert(block.IsOn("B5", "B6"), "");
			Assert(block.IsOn("B6", "B2"), "");
			Assert(block.IsOntable("B3"), "");
			block.Unstack("B5", "B6");
			Assert(block.IsClear("B6"), "");
			Assert(block.IsHolding("B5"), "");
			Assert(block.IsOn("B2", "B3"), "");
			Assert(block.IsOn("B6", "B2"), "");
			Assert(block.IsOntable("B3"), "");
		}

		public void Test136() {
			Console.WriteLine("Test case 136");
			Init3();
			block.Unstack("B5", "B6");
			block.Putdown("B5");
			block.Pickup("B6");
			block.Stack("B6", "B2");
			block.Unstack("B6", "B2");
			Assert(block.IsClear("B2"), "3_2_1_2_2_2");
			Assert(block.IsClear("B5"), "3_2_1_2_2_2");
			Assert(block.IsHolding("B6"), "3_2_1_2_2_2");
			Assert(block.IsOn("B2", "B3"), "3_2_1_2_2_2");
			Assert(block.IsOntable("B3"), "3_2_1_2_2_2");
			Assert(block.IsOntable("B5"), "3_2_1_2_2_2");
		}

		public void Test137() {
			Console.WriteLine("Test case 137");
			Init3();
			block.Unstack("B5", "B6");
			block.Putdown("B5");
			block.Pickup("B6");
			block.Stack("B6", "B5");
			Assert(block.IsClear("B2"), "3_2_1_2_3");
			Assert(block.IsClear("B6"), "3_2_1_2_3");
			Assert(block.IsOn("B2", "B3"), "3_2_1_2_3");
			Assert(block.IsOn("B6", "B5"), "3_2_1_2_3");
			Assert(block.IsOntable("B3"), "3_2_1_2_3");
			Assert(block.IsOntable("B5"), "3_2_1_2_3");
			block.Unstack("B2", "B3");
			Assert(block.IsClear("B3"), "3_2_1_2_3_1");
			Assert(block.IsClear("B6"), "3_2_1_2_3_1");
			Assert(block.IsHolding("B2"), "3_2_1_2_3_1");
			Assert(block.IsOn("B6", "B5"), "3_2_1_2_3_1");
			Assert(block.IsOntable("B3"), "3_2_1_2_3_1");
			Assert(block.IsOntable("B5"), "3_2_1_2_3_1");
			block.Putdown("B2");
			Assert(block.IsClear("B2"), "");
			Assert(block.IsClear("B3"), "");
			Assert(block.IsClear("B6"), "");
			Assert(block.IsOn("B6", "B5"), "");
			Assert(block.IsOntable("B2"), "");
			Assert(block.IsOntable("B3"), "");
			Assert(block.IsOntable("B5"), "");
		}

		public void Test138() {
			Console.WriteLine("Test case 138");
			Init3();
			block.Unstack("B5", "B6");
			block.Putdown("B5");
			block.Pickup("B6");
			block.Stack("B6", "B5");
			block.Unstack("B2", "B3");
			block.Stack("B2", "B3");
			Assert(block.IsClear("B2"), "");
			Assert(block.IsClear("B6"), "");
			Assert(block.IsOn("B2", "B3"), "");
			Assert(block.IsOn("B6", "B5"), "");
			Assert(block.IsOntable("B3"), "");
			Assert(block.IsOntable("B5"), "");
		}

		public void Test139() {
			Console.WriteLine("Test case 139");
			Init3();
			block.Unstack("B5", "B6");
			block.Putdown("B5");
			block.Pickup("B6");
			block.Stack("B6", "B5");
			block.Unstack("B2", "B3");
			block.Stack("B2", "B6");
			Assert(block.IsClear("B2"), "");
			Assert(block.IsClear("B3"), "");
			Assert(block.IsOn("B2", "B6"), "");
			Assert(block.IsOn("B6", "B5"), "");
			Assert(block.IsOntable("B3"), "");
			Assert(block.IsOntable("B5"), "");
			block.Pickup("B3");
			Assert(block.IsClear("B2"), "");
			Assert(block.IsHolding("B3"), "");
			Assert(block.IsOn("B2", "B6"), "");
			Assert(block.IsOn("B6", "B5"), "");
			Assert(block.IsOntable("B5"), "");
			block.Putdown("B3");
			Assert(block.IsClear("B2"), "");
			Assert(block.IsClear("B3"), "");
			Assert(block.IsOn("B2", "B6"), "");
			Assert(block.IsOn("B6", "B5"), "");
			Assert(block.IsOntable("B3"), "");
			Assert(block.IsOntable("B5"), "");
		}

		public void Test140() {
			Console.WriteLine("Test case 140");
			Init3();
			block.Unstack("B5", "B6");
			block.Putdown("B5");
			block.Pickup("B6");
			block.Stack("B6", "B5");
			block.Unstack("B2", "B3");
			block.Stack("B2", "B6");
			block.Pickup("B3");
			block.Stack("B3", "B2");
			Assert(block.IsClear("B3"), "");
			Assert(block.IsOn("B2", "B6"), "");
			Assert(block.IsOn("B3", "B2"), "");
			Assert(block.IsOn("B6", "B5"), "");
			Assert(block.IsOntable("B5"), "");
			block.Unstack("B3", "B2");
			Assert(block.IsClear("B2"), "");
			Assert(block.IsHolding("B3"), "");
			Assert(block.IsOn("B2", "B6"), "");
			Assert(block.IsOn("B6", "B5"), "");
			Assert(block.IsOntable("B5"), "");
		}

		public void Test141() {
			Console.WriteLine("Test case 141");
			Init3();
			block.Unstack("B5", "B6");
			block.Putdown("B5");
			block.Pickup("B6");
			block.Stack("B6", "B5");
			block.Unstack("B2", "B3");
			block.Stack("B2", "B6");
			block.Unstack("B2", "B6");
			Assert(block.IsClear("B3"), "");
			Assert(block.IsClear("B6"), "");
			Assert(block.IsHolding("B2"), "");
			Assert(block.IsOn("B6", "B5"), "");
			Assert(block.IsOntable("B3"), "");
			Assert(block.IsOntable("B5"), "");
		}

		public void Test142() {
			Console.WriteLine("Test case 142");
			Init3();
			block.Unstack("B5", "B6");
			block.Putdown("B5");
			block.Pickup("B6");
			block.Stack("B6", "B5");
			block.Unstack("B6", "B5");
			Assert(block.IsClear("B2"), "3_2_1_2_3_2");
			Assert(block.IsClear("B5"), "3_2_1_2_3_2");
			Assert(block.IsHolding("B6"), "3_2_1_2_3_2");
			Assert(block.IsOn("B2", "B3"), "3_2_1_2_3_2");
			Assert(block.IsOntable("B3"), "3_2_1_2_3_2");
			Assert(block.IsOntable("B5"), "3_2_1_2_3_2");
		}

		public void Test143() {
			Console.WriteLine("Test case 143");
			Init3();
			block.Unstack("B5", "B6");
			block.Putdown("B5");
			block.Unstack("B2", "B3");
			Assert(block.IsClear("B3"), "3_2_1_3");
			Assert(block.IsClear("B5"), "3_2_1_3");
			Assert(block.IsClear("B6"), "3_2_1_3");
			Assert(block.IsHolding("B2"), "3_2_1_3");
			Assert(block.IsOntable("B3"), "3_2_1_3");
			Assert(block.IsOntable("B5"), "3_2_1_3");
			Assert(block.IsOntable("B6"), "3_2_1_3");
			block.Putdown("B2");
			Assert(block.IsClear("B2"), "3_2_1_3_1");
			Assert(block.IsClear("B3"), "3_2_1_3_1");
			Assert(block.IsClear("B5"), "3_2_1_3_1");
			Assert(block.IsClear("B6"), "3_2_1_3_1");
			Assert(block.IsOntable("B2"), "3_2_1_3_1");
			Assert(block.IsOntable("B3"), "3_2_1_3_1");
			Assert(block.IsOntable("B5"), "3_2_1_3_1");
			Assert(block.IsOntable("B6"), "3_2_1_3_1");
		}

		public void Test144() {
			Console.WriteLine("Test case 144");
			Init3();
			block.Unstack("B5", "B6");
			block.Putdown("B5");
			block.Unstack("B2", "B3");
			block.Stack("B2", "B3");
			Assert(block.IsClear("B2"), "3_2_1_3_2");
			Assert(block.IsClear("B5"), "3_2_1_3_2");
			Assert(block.IsClear("B6"), "3_2_1_3_2");
			Assert(block.IsOn("B2", "B3"), "3_2_1_3_2");
			Assert(block.IsOntable("B3"), "3_2_1_3_2");
			Assert(block.IsOntable("B5"), "3_2_1_3_2");
			Assert(block.IsOntable("B6"), "3_2_1_3_2");
		}

		public void Test145() {
			Console.WriteLine("Test case 145");
			Init3();
			block.Unstack("B5", "B6");
			block.Putdown("B5");
			block.Unstack("B2", "B3");
			block.Stack("B2", "B5");
			Assert(block.IsClear("B2"), "3_2_1_3_3");
			Assert(block.IsClear("B3"), "3_2_1_3_3");
			Assert(block.IsClear("B6"), "3_2_1_3_3");
			Assert(block.IsOn("B2", "B5"), "3_2_1_3_3");
			Assert(block.IsOntable("B3"), "3_2_1_3_3");
			Assert(block.IsOntable("B5"), "3_2_1_3_3");
			Assert(block.IsOntable("B6"), "3_2_1_3_3");
			block.Pickup("B3");
			Assert(block.IsClear("B2"), "3_2_1_3_3_1");
			Assert(block.IsClear("B6"), "3_2_1_3_3_1");
			Assert(block.IsHolding("B3"), "3_2_1_3_3_1");
			Assert(block.IsOn("B2", "B5"), "3_2_1_3_3_1");
			Assert(block.IsOntable("B5"), "3_2_1_3_3_1");
			Assert(block.IsOntable("B6"), "3_2_1_3_3_1");
			block.Putdown("B3");
			Assert(block.IsClear("B2"), "");
			Assert(block.IsClear("B3"), "");
			Assert(block.IsClear("B6"), "");
			Assert(block.IsOn("B2", "B5"), "");
			Assert(block.IsOntable("B3"), "");
			Assert(block.IsOntable("B5"), "");
			Assert(block.IsOntable("B6"), "");
		}

		public void Test146() {
			Console.WriteLine("Test case 146");
			Init3();
			block.Unstack("B5", "B6");
			block.Putdown("B5");
			block.Unstack("B2", "B3");
			block.Stack("B2", "B5");
			block.Pickup("B3");
			block.Stack("B3", "B2");
			Assert(block.IsClear("B3"), "");
			Assert(block.IsClear("B6"), "");
			Assert(block.IsOn("B2", "B5"), "");
			Assert(block.IsOn("B3", "B2"), "");
			Assert(block.IsOntable("B5"), "");
			Assert(block.IsOntable("B6"), "");
			block.Pickup("B6");
			Assert(block.IsClear("B3"), "");
			Assert(block.IsHolding("B6"), "");
			Assert(block.IsOn("B2", "B5"), "");
			Assert(block.IsOn("B3", "B2"), "");
			Assert(block.IsOntable("B5"), "");
			block.Putdown("B6");
			Assert(block.IsClear("B3"), "");
			Assert(block.IsClear("B6"), "");
			Assert(block.IsOn("B2", "B5"), "");
			Assert(block.IsOn("B3", "B2"), "");
			Assert(block.IsOntable("B5"), "");
			Assert(block.IsOntable("B6"), "");
		}

		public void Test147() {
			Console.WriteLine("Test case 147");
			Init3();
			block.Unstack("B5", "B6");
			block.Putdown("B5");
			block.Unstack("B2", "B3");
			block.Stack("B2", "B5");
			block.Pickup("B3");
			block.Stack("B3", "B2");
			block.Pickup("B6");
			block.Stack("B6", "B3");
			Assert(block.IsClear("B6"), "");
			Assert(block.IsOn("B2", "B5"), "");
			Assert(block.IsOn("B3", "B2"), "");
			Assert(block.IsOn("B6", "B3"), "");
			Assert(block.IsOntable("B5"), "");
			block.Unstack("B6", "B3");
			Assert(block.IsClear("B3"), "");
			Assert(block.IsHolding("B6"), "");
			Assert(block.IsOn("B2", "B5"), "");
			Assert(block.IsOn("B3", "B2"), "");
			Assert(block.IsOntable("B5"), "");
		}

		public void Test148() {
			Console.WriteLine("Test case 148");
			Init3();
			block.Unstack("B5", "B6");
			block.Putdown("B5");
			block.Unstack("B2", "B3");
			block.Stack("B2", "B5");
			block.Pickup("B3");
			block.Stack("B3", "B2");
			block.Unstack("B3", "B2");
			Assert(block.IsClear("B2"), "");
			Assert(block.IsClear("B6"), "");
			Assert(block.IsHolding("B3"), "");
			Assert(block.IsOn("B2", "B5"), "");
			Assert(block.IsOntable("B5"), "");
			Assert(block.IsOntable("B6"), "");
		}

		public void Test149() {
			Console.WriteLine("Test case 149");
			Init3();
			block.Unstack("B5", "B6");
			block.Putdown("B5");
			block.Unstack("B2", "B3");
			block.Stack("B2", "B5");
			block.Pickup("B3");
			block.Stack("B3", "B6");
			Assert(block.IsClear("B2"), "");
			Assert(block.IsClear("B3"), "");
			Assert(block.IsOn("B2", "B5"), "");
			Assert(block.IsOn("B3", "B6"), "");
			Assert(block.IsOntable("B5"), "");
			Assert(block.IsOntable("B6"), "");
			block.Unstack("B2", "B5");
			Assert(block.IsClear("B3"), "");
			Assert(block.IsClear("B5"), "");
			Assert(block.IsHolding("B2"), "");
			Assert(block.IsOn("B3", "B6"), "");
			Assert(block.IsOntable("B5"), "");
			Assert(block.IsOntable("B6"), "");
		}

		public void Test150() {
			Console.WriteLine("Test case 150");
			Init3();
			block.Unstack("B5", "B6");
			block.Putdown("B5");
			block.Unstack("B2", "B3");
			block.Stack("B2", "B5");
			block.Pickup("B3");
			block.Stack("B3", "B6");
			block.Unstack("B3", "B6");
			Assert(block.IsClear("B2"), "");
			Assert(block.IsClear("B6"), "");
			Assert(block.IsHolding("B3"), "");
			Assert(block.IsOn("B2", "B5"), "");
			Assert(block.IsOntable("B5"), "");
			Assert(block.IsOntable("B6"), "");
		}

		public void Test151() {
			Console.WriteLine("Test case 151");
			Init3();
			block.Unstack("B5", "B6");
			block.Putdown("B5");
			block.Unstack("B2", "B3");
			block.Stack("B2", "B5");
			block.Pickup("B6");
			Assert(block.IsClear("B2"), "3_2_1_3_3_2");
			Assert(block.IsClear("B3"), "3_2_1_3_3_2");
			Assert(block.IsHolding("B6"), "3_2_1_3_3_2");
			Assert(block.IsOn("B2", "B5"), "3_2_1_3_3_2");
			Assert(block.IsOntable("B3"), "3_2_1_3_3_2");
			Assert(block.IsOntable("B5"), "3_2_1_3_3_2");
			block.Putdown("B6");
			Assert(block.IsClear("B2"), "");
			Assert(block.IsClear("B3"), "");
			Assert(block.IsClear("B6"), "");
			Assert(block.IsOn("B2", "B5"), "");
			Assert(block.IsOntable("B3"), "");
			Assert(block.IsOntable("B5"), "");
			Assert(block.IsOntable("B6"), "");
		}

		public void Test152() {
			Console.WriteLine("Test case 152");
			Init3();
			block.Unstack("B5", "B6");
			block.Putdown("B5");
			block.Unstack("B2", "B3");
			block.Stack("B2", "B5");
			block.Pickup("B6");
			block.Stack("B6", "B2");
			Assert(block.IsClear("B3"), "");
			Assert(block.IsClear("B6"), "");
			Assert(block.IsOn("B2", "B5"), "");
			Assert(block.IsOn("B6", "B2"), "");
			Assert(block.IsOntable("B3"), "");
			Assert(block.IsOntable("B5"), "");
			block.Pickup("B3");
			Assert(block.IsClear("B6"), "");
			Assert(block.IsHolding("B3"), "");
			Assert(block.IsOn("B2", "B5"), "");
			Assert(block.IsOn("B6", "B2"), "");
			Assert(block.IsOntable("B5"), "");
			block.Putdown("B3");
			Assert(block.IsClear("B3"), "");
			Assert(block.IsClear("B6"), "");
			Assert(block.IsOn("B2", "B5"), "");
			Assert(block.IsOn("B6", "B2"), "");
			Assert(block.IsOntable("B3"), "");
			Assert(block.IsOntable("B5"), "");
		}

		public void Test153() {
			Console.WriteLine("Test case 153");
			Init3();
			block.Unstack("B5", "B6");
			block.Putdown("B5");
			block.Unstack("B2", "B3");
			block.Stack("B2", "B5");
			block.Pickup("B6");
			block.Stack("B6", "B2");
			block.Pickup("B3");
			block.Stack("B3", "B6");
			Assert(block.IsClear("B3"), "");
			Assert(block.IsOn("B2", "B5"), "");
			Assert(block.IsOn("B3", "B6"), "");
			Assert(block.IsOn("B6", "B2"), "");
			Assert(block.IsOntable("B5"), "");
			block.Unstack("B3", "B6");
			Assert(block.IsClear("B6"), "");
			Assert(block.IsHolding("B3"), "");
			Assert(block.IsOn("B2", "B5"), "");
			Assert(block.IsOn("B6", "B2"), "");
			Assert(block.IsOntable("B5"), "");
		}

		public void Test154() {
			Console.WriteLine("Test case 154");
			Init3();
			block.Unstack("B5", "B6");
			block.Putdown("B5");
			block.Unstack("B2", "B3");
			block.Stack("B2", "B5");
			block.Pickup("B6");
			block.Stack("B6", "B2");
			block.Unstack("B6", "B2");
			Assert(block.IsClear("B2"), "");
			Assert(block.IsClear("B3"), "");
			Assert(block.IsHolding("B6"), "");
			Assert(block.IsOn("B2", "B5"), "");
			Assert(block.IsOntable("B3"), "");
			Assert(block.IsOntable("B5"), "");
		}

		public void Test155() {
			Console.WriteLine("Test case 155");
			Init3();
			block.Unstack("B5", "B6");
			block.Putdown("B5");
			block.Unstack("B2", "B3");
			block.Stack("B2", "B5");
			block.Pickup("B6");
			block.Stack("B6", "B3");
			Assert(block.IsClear("B2"), "");
			Assert(block.IsClear("B6"), "");
			Assert(block.IsOn("B2", "B5"), "");
			Assert(block.IsOn("B6", "B3"), "");
			Assert(block.IsOntable("B3"), "");
			Assert(block.IsOntable("B5"), "");
			block.Unstack("B2", "B5");
			Assert(block.IsClear("B5"), "");
			Assert(block.IsClear("B6"), "");
			Assert(block.IsHolding("B2"), "");
			Assert(block.IsOn("B6", "B3"), "");
			Assert(block.IsOntable("B3"), "");
			Assert(block.IsOntable("B5"), "");
		}

		public void Test156() {
			Console.WriteLine("Test case 156");
			Init3();
			block.Unstack("B5", "B6");
			block.Putdown("B5");
			block.Unstack("B2", "B3");
			block.Stack("B2", "B5");
			block.Pickup("B6");
			block.Stack("B6", "B3");
			block.Unstack("B6", "B3");
			Assert(block.IsClear("B2"), "");
			Assert(block.IsClear("B3"), "");
			Assert(block.IsHolding("B6"), "");
			Assert(block.IsOn("B2", "B5"), "");
			Assert(block.IsOntable("B3"), "");
			Assert(block.IsOntable("B5"), "");
		}

		public void Test157() {
			Console.WriteLine("Test case 157");
			Init3();
			block.Unstack("B5", "B6");
			block.Putdown("B5");
			block.Unstack("B2", "B3");
			block.Stack("B2", "B5");
			block.Unstack("B2", "B5");
			Assert(block.IsClear("B3"), "3_2_1_3_3_3");
			Assert(block.IsClear("B5"), "3_2_1_3_3_3");
			Assert(block.IsClear("B6"), "3_2_1_3_3_3");
			Assert(block.IsHolding("B2"), "3_2_1_3_3_3");
			Assert(block.IsOntable("B3"), "3_2_1_3_3_3");
			Assert(block.IsOntable("B5"), "3_2_1_3_3_3");
			Assert(block.IsOntable("B6"), "3_2_1_3_3_3");
		}

		public void Test158() {
			Console.WriteLine("Test case 158");
			Init3();
			block.Unstack("B5", "B6");
			block.Putdown("B5");
			block.Unstack("B2", "B3");
			block.Stack("B2", "B6");
			Assert(block.IsClear("B2"), "3_2_1_3_4");
			Assert(block.IsClear("B3"), "3_2_1_3_4");
			Assert(block.IsClear("B5"), "3_2_1_3_4");
			Assert(block.IsOn("B2", "B6"), "3_2_1_3_4");
			Assert(block.IsOntable("B3"), "3_2_1_3_4");
			Assert(block.IsOntable("B5"), "3_2_1_3_4");
			Assert(block.IsOntable("B6"), "3_2_1_3_4");
			block.Pickup("B3");
			Assert(block.IsClear("B2"), "3_2_1_3_4_1");
			Assert(block.IsClear("B5"), "3_2_1_3_4_1");
			Assert(block.IsHolding("B3"), "3_2_1_3_4_1");
			Assert(block.IsOn("B2", "B6"), "3_2_1_3_4_1");
			Assert(block.IsOntable("B5"), "3_2_1_3_4_1");
			Assert(block.IsOntable("B6"), "3_2_1_3_4_1");
			block.Putdown("B3");
			Assert(block.IsClear("B2"), "");
			Assert(block.IsClear("B3"), "");
			Assert(block.IsClear("B5"), "");
			Assert(block.IsOn("B2", "B6"), "");
			Assert(block.IsOntable("B3"), "");
			Assert(block.IsOntable("B5"), "");
			Assert(block.IsOntable("B6"), "");
		}

		public void Test159() {
			Console.WriteLine("Test case 159");
			Init3();
			block.Unstack("B5", "B6");
			block.Putdown("B5");
			block.Unstack("B2", "B3");
			block.Stack("B2", "B6");
			block.Pickup("B3");
			block.Stack("B3", "B2");
			Assert(block.IsClear("B3"), "");
			Assert(block.IsClear("B5"), "");
			Assert(block.IsOn("B2", "B6"), "");
			Assert(block.IsOn("B3", "B2"), "");
			Assert(block.IsOntable("B5"), "");
			Assert(block.IsOntable("B6"), "");
			block.Pickup("B5");
			Assert(block.IsClear("B3"), "");
			Assert(block.IsHolding("B5"), "");
			Assert(block.IsOn("B2", "B6"), "");
			Assert(block.IsOn("B3", "B2"), "");
			Assert(block.IsOntable("B6"), "");
			block.Putdown("B5");
			Assert(block.IsClear("B3"), "");
			Assert(block.IsClear("B5"), "");
			Assert(block.IsOn("B2", "B6"), "");
			Assert(block.IsOn("B3", "B2"), "");
			Assert(block.IsOntable("B5"), "");
			Assert(block.IsOntable("B6"), "");
		}

		public void Test160() {
			Console.WriteLine("Test case 160");
			Init3();
			block.Unstack("B5", "B6");
			block.Putdown("B5");
			block.Unstack("B2", "B3");
			block.Stack("B2", "B6");
			block.Pickup("B3");
			block.Stack("B3", "B2");
			block.Pickup("B5");
			block.Stack("B5", "B3");
			Assert(block.IsClear("B5"), "");
			Assert(block.IsOn("B2", "B6"), "");
			Assert(block.IsOn("B3", "B2"), "");
			Assert(block.IsOn("B5", "B3"), "");
			Assert(block.IsOntable("B6"), "");
			block.Unstack("B5", "B3");
			Assert(block.IsClear("B3"), "");
			Assert(block.IsHolding("B5"), "");
			Assert(block.IsOn("B2", "B6"), "");
			Assert(block.IsOn("B3", "B2"), "");
			Assert(block.IsOntable("B6"), "");
		}

		public void Test161() {
			Console.WriteLine("Test case 161");
			Init3();
			block.Unstack("B5", "B6");
			block.Putdown("B5");
			block.Unstack("B2", "B3");
			block.Stack("B2", "B6");
			block.Pickup("B3");
			block.Stack("B3", "B2");
			block.Unstack("B3", "B2");
			Assert(block.IsClear("B2"), "");
			Assert(block.IsClear("B5"), "");
			Assert(block.IsHolding("B3"), "");
			Assert(block.IsOn("B2", "B6"), "");
			Assert(block.IsOntable("B5"), "");
			Assert(block.IsOntable("B6"), "");
		}

		public void Test162() {
			Console.WriteLine("Test case 162");
			Init3();
			block.Unstack("B5", "B6");
			block.Putdown("B5");
			block.Unstack("B2", "B3");
			block.Stack("B2", "B6");
			block.Pickup("B3");
			block.Stack("B3", "B5");
			Assert(block.IsClear("B2"), "");
			Assert(block.IsClear("B3"), "");
			Assert(block.IsOn("B2", "B6"), "");
			Assert(block.IsOn("B3", "B5"), "");
			Assert(block.IsOntable("B5"), "");
			Assert(block.IsOntable("B6"), "");
			block.Unstack("B2", "B6");
			Assert(block.IsClear("B3"), "");
			Assert(block.IsClear("B6"), "");
			Assert(block.IsHolding("B2"), "");
			Assert(block.IsOn("B3", "B5"), "");
			Assert(block.IsOntable("B5"), "");
			Assert(block.IsOntable("B6"), "");
		}

		public void Test163() {
			Console.WriteLine("Test case 163");
			Init3();
			block.Unstack("B5", "B6");
			block.Putdown("B5");
			block.Unstack("B2", "B3");
			block.Stack("B2", "B6");
			block.Pickup("B3");
			block.Stack("B3", "B5");
			block.Unstack("B3", "B5");
			Assert(block.IsClear("B2"), "");
			Assert(block.IsClear("B5"), "");
			Assert(block.IsHolding("B3"), "");
			Assert(block.IsOn("B2", "B6"), "");
			Assert(block.IsOntable("B5"), "");
			Assert(block.IsOntable("B6"), "");
		}

		public void Test164() {
			Console.WriteLine("Test case 164");
			Init3();
			block.Unstack("B5", "B6");
			block.Putdown("B5");
			block.Unstack("B2", "B3");
			block.Stack("B2", "B6");
			block.Pickup("B5");
			Assert(block.IsClear("B2"), "3_2_1_3_4_2");
			Assert(block.IsClear("B3"), "3_2_1_3_4_2");
			Assert(block.IsHolding("B5"), "3_2_1_3_4_2");
			Assert(block.IsOn("B2", "B6"), "3_2_1_3_4_2");
			Assert(block.IsOntable("B3"), "3_2_1_3_4_2");
			Assert(block.IsOntable("B6"), "3_2_1_3_4_2");
			block.Putdown("B5");
			Assert(block.IsClear("B2"), "");
			Assert(block.IsClear("B3"), "");
			Assert(block.IsClear("B5"), "");
			Assert(block.IsOn("B2", "B6"), "");
			Assert(block.IsOntable("B3"), "");
			Assert(block.IsOntable("B5"), "");
			Assert(block.IsOntable("B6"), "");
		}

		public void Test165() {
			Console.WriteLine("Test case 165");
			Init3();
			block.Unstack("B5", "B6");
			block.Putdown("B5");
			block.Unstack("B2", "B3");
			block.Stack("B2", "B6");
			block.Pickup("B5");
			block.Stack("B5", "B2");
			Assert(block.IsClear("B3"), "");
			Assert(block.IsClear("B5"), "");
			Assert(block.IsOn("B2", "B6"), "");
			Assert(block.IsOn("B5", "B2"), "");
			Assert(block.IsOntable("B3"), "");
			Assert(block.IsOntable("B6"), "");
			block.Pickup("B3");
			Assert(block.IsClear("B5"), "");
			Assert(block.IsHolding("B3"), "");
			Assert(block.IsOn("B2", "B6"), "");
			Assert(block.IsOn("B5", "B2"), "");
			Assert(block.IsOntable("B6"), "");
			block.Putdown("B3");
			Assert(block.IsClear("B3"), "");
			Assert(block.IsClear("B5"), "");
			Assert(block.IsOn("B2", "B6"), "");
			Assert(block.IsOn("B5", "B2"), "");
			Assert(block.IsOntable("B3"), "");
			Assert(block.IsOntable("B6"), "");
		}

		public void Test166() {
			Console.WriteLine("Test case 166");
			Init3();
			block.Unstack("B5", "B6");
			block.Putdown("B5");
			block.Unstack("B2", "B3");
			block.Stack("B2", "B6");
			block.Pickup("B5");
			block.Stack("B5", "B2");
			block.Pickup("B3");
			block.Stack("B3", "B5");
			Assert(block.IsClear("B3"), "");
			Assert(block.IsOn("B2", "B6"), "");
			Assert(block.IsOn("B3", "B5"), "");
			Assert(block.IsOn("B5", "B2"), "");
			Assert(block.IsOntable("B6"), "");
			block.Unstack("B3", "B5");
			Assert(block.IsClear("B5"), "");
			Assert(block.IsHolding("B3"), "");
			Assert(block.IsOn("B2", "B6"), "");
			Assert(block.IsOn("B5", "B2"), "");
			Assert(block.IsOntable("B6"), "");
		}

		public void Test167() {
			Console.WriteLine("Test case 167");
			Init3();
			block.Unstack("B5", "B6");
			block.Putdown("B5");
			block.Unstack("B2", "B3");
			block.Stack("B2", "B6");
			block.Pickup("B5");
			block.Stack("B5", "B2");
			block.Unstack("B5", "B2");
			Assert(block.IsClear("B2"), "");
			Assert(block.IsClear("B3"), "");
			Assert(block.IsHolding("B5"), "");
			Assert(block.IsOn("B2", "B6"), "");
			Assert(block.IsOntable("B3"), "");
			Assert(block.IsOntable("B6"), "");
		}

		public void Test168() {
			Console.WriteLine("Test case 168");
			Init3();
			block.Unstack("B5", "B6");
			block.Putdown("B5");
			block.Unstack("B2", "B3");
			block.Stack("B2", "B6");
			block.Pickup("B5");
			block.Stack("B5", "B3");
			Assert(block.IsClear("B2"), "");
			Assert(block.IsClear("B5"), "");
			Assert(block.IsOn("B2", "B6"), "");
			Assert(block.IsOn("B5", "B3"), "");
			Assert(block.IsOntable("B3"), "");
			Assert(block.IsOntable("B6"), "");
		}

		public void Test169() {
			Console.WriteLine("Test case 169");
			Init3();
			block.Unstack("B5", "B6");
			block.Putdown("B5");
			block.Unstack("B2", "B3");
			block.Stack("B2", "B6");
			block.Unstack("B2", "B6");
			Assert(block.IsClear("B3"), "3_2_1_3_4_3");
			Assert(block.IsClear("B5"), "3_2_1_3_4_3");
			Assert(block.IsClear("B6"), "3_2_1_3_4_3");
			Assert(block.IsHolding("B2"), "3_2_1_3_4_3");
			Assert(block.IsOntable("B3"), "3_2_1_3_4_3");
			Assert(block.IsOntable("B5"), "3_2_1_3_4_3");
			Assert(block.IsOntable("B6"), "3_2_1_3_4_3");
		}

		public void Test170() {
			Console.WriteLine("Test case 170");
			Init3();
			block.Unstack("B5", "B6");
			block.Stack("B5", "B2");
			Assert(block.IsClear("B5"), "3_2_2");
			Assert(block.IsClear("B6"), "3_2_2");
			Assert(block.IsOn("B2", "B3"), "3_2_2");
			Assert(block.IsOn("B5", "B2"), "3_2_2");
			Assert(block.IsOntable("B3"), "3_2_2");
			Assert(block.IsOntable("B6"), "3_2_2");
			block.Pickup("B6");
			Assert(block.IsClear("B5"), "3_2_2_1");
			Assert(block.IsHolding("B6"), "3_2_2_1");
			Assert(block.IsOn("B2", "B3"), "3_2_2_1");
			Assert(block.IsOn("B5", "B2"), "3_2_2_1");
			Assert(block.IsOntable("B3"), "3_2_2_1");
			block.Putdown("B6");
			Assert(block.IsClear("B5"), "3_2_2_1_1");
			Assert(block.IsClear("B6"), "3_2_2_1_1");
			Assert(block.IsOn("B2", "B3"), "3_2_2_1_1");
			Assert(block.IsOn("B5", "B2"), "3_2_2_1_1");
			Assert(block.IsOntable("B3"), "3_2_2_1_1");
			Assert(block.IsOntable("B6"), "3_2_2_1_1");
		}

		public void Test171() {
			Console.WriteLine("Test case 171");
			Init3();
			block.Unstack("B5", "B6");
			block.Stack("B5", "B2");
			block.Pickup("B6");
			block.Stack("B6", "B5");
			Assert(block.IsClear("B6"), "3_2_2_1_2");
			Assert(block.IsOn("B2", "B3"), "3_2_2_1_2");
			Assert(block.IsOn("B5", "B2"), "3_2_2_1_2");
			Assert(block.IsOn("B6", "B5"), "3_2_2_1_2");
			Assert(block.IsOntable("B3"), "3_2_2_1_2");
			block.Unstack("B6", "B5");
			Assert(block.IsClear("B5"), "3_2_2_1_2_1");
			Assert(block.IsHolding("B6"), "3_2_2_1_2_1");
			Assert(block.IsOn("B2", "B3"), "3_2_2_1_2_1");
			Assert(block.IsOn("B5", "B2"), "3_2_2_1_2_1");
			Assert(block.IsOntable("B3"), "3_2_2_1_2_1");
		}

		public void Test172() {
			Console.WriteLine("Test case 172");
			Init3();
			block.Unstack("B5", "B6");
			block.Stack("B5", "B2");
			block.Unstack("B5", "B2");
			Assert(block.IsClear("B2"), "3_2_2_2");
			Assert(block.IsClear("B6"), "3_2_2_2");
			Assert(block.IsHolding("B5"), "3_2_2_2");
			Assert(block.IsOn("B2", "B3"), "3_2_2_2");
			Assert(block.IsOntable("B3"), "3_2_2_2");
			Assert(block.IsOntable("B6"), "3_2_2_2");
		}

		public void Test173() {
			Console.WriteLine("Test case 173");
			Init3();
			block.Unstack("B5", "B6");
			block.Stack("B5", "B6");
			Assert(block.IsClear("B2"), "3_2_3");
			Assert(block.IsClear("B5"), "3_2_3");
			Assert(block.IsOn("B2", "B3"), "3_2_3");
			Assert(block.IsOn("B5", "B6"), "3_2_3");
			Assert(block.IsOntable("B3"), "3_2_3");
			Assert(block.IsOntable("B6"), "3_2_3");
		}

		public void TestAll(){
			Test1();
			Test2();
			Test3();
			Test4();
			Test5();
			Test6();
			Test7();
			Test8();
			Test9();
			Test10();
			Test11();
			Test12();
			Test13();
			Test14();
			Test15();
			Test16();
			Test17();
			Test18();
			Test19();
			Test20();
			Test21();
			Test22();
			Test23();
			Test24();
			Test25();
			Test26();
			Test27();
			Test28();
			Test29();
			Test30();
			Test31();
			Test32();
			Test33();
			Test34();
			Test35();
			Test36();
			Test37();
			Test38();
			Test39();
			Test40();
			Test41();
			Test42();
			Test43();
			Test44();
			Test45();
			Test46();
			Test47();
			Test48();
			Test49();
			Test50();
			Test51();
			Test52();
			Test53();
			Test54();
			Test55();
			Test56();
			Test57();
			Test58();
			Test59();
			Test60();
			Test61();
			Test62();
			Test63();
			Test64();
			Test65();
			Test66();
			Test67();
			Test68();
			Test69();
			Test70();
			Test71();
			Test72();
			Test73();
			Test74();
			Test75();
			Test76();
			Test77();
			Test78();
			Test79();
			Test80();
			Test81();
			Test82();
			Test83();
			Test84();
			Test85();
			Test86();
			Test87();
			Test88();
			Test89();
			Test90();
			Test91();
			Test92();
			Test93();
			Test94();
			Test95();
			Test96();
			Test97();
			Test98();
			Test99();
			Test100();
			Test101();
			Test102();
			Test103();
			Test104();
			Test105();
			Test106();
			Test107();
			Test108();
			Test109();
			Test110();
			Test111();
			Test112();
			Test113();
			Test114();
			Test115();
			Test116();
			Test117();
			Test118();
			Test119();
			Test120();
			Test121();
			Test122();
			Test123();
			Test124();
			Test125();
			Test126();
			Test127();
			Test128();
			Test129();
			Test130();
			Test131();
			Test132();
			Test133();
			Test134();
			Test135();
			Test136();
			Test137();
			Test138();
			Test139();
			Test140();
			Test141();
			Test142();
			Test143();
			Test144();
			Test145();
			Test146();
			Test147();
			Test148();
			Test149();
			Test150();
			Test151();
			Test152();
			Test153();
			Test154();
			Test155();
			Test156();
			Test157();
			Test158();
			Test159();
			Test160();
			Test161();
			Test162();
			Test163();
			Test164();
			Test165();
			Test166();
			Test167();
			Test168();
			Test169();
			Test170();
			Test171();
			Test172();
			Test173();
		}

		public static void Main() {
			BlockTester_RT tester = new BlockTester_RT();
			tester.TestAll();
			Console.WriteLine("\nPress any key to continue...");
			Console.Read();
		}

	}

} // End of namespace