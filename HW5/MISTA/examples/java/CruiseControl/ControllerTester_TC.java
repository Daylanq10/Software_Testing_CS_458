//Test code generated by MISTA

import junit.framework.*;

public class ControllerTester_TC extends TestCase{

	private Controller controller;
	
	protected void setUp()  throws Exception {
		controller = new Controller();
	}
	
	public void test1() throws Exception {
		System.out.println("Test case 1");
		controller.engineOn();
		assertTrue("1_1", controller.ACTIVE());
		controller.engineOff();
		assertTrue("1_1_1", controller.INACTIVE());
	}

	public void test2() throws Exception {
		System.out.println("Test case 2");
		controller.engineOn();
		controller.brake();
		assertTrue("1_1_2", controller.ACTIVE());
	}

	public void test3() throws Exception {
		System.out.println("Test case 3");
		controller.engineOn();
		controller.accelerator();
		assertTrue("1_1_3", controller.ACTIVE());
	}

	public void test4() throws Exception {
		System.out.println("Test case 4");
		controller.engineOn();
		controller.on();
		assertTrue("1_1_4", controller.CRUISING());
		controller.engineOff();
		assertTrue("1_1_4_1", controller.INACTIVE());
	}

	public void test5() throws Exception {
		System.out.println("Test case 5");
		controller.engineOn();
		controller.on();
		controller.brake();
		assertTrue("1_1_4_2", controller.STANDBY());
		controller.engineOff();
		assertTrue("1_1_4_2_1", controller.INACTIVE());
	}

	public void test6() throws Exception {
		System.out.println("Test case 6");
		controller.engineOn();
		controller.on();
		controller.brake();
		controller.resume();
		assertTrue("1_1_4_2_2", controller.CRUISING());
	}

	public void test7() throws Exception {
		System.out.println("Test case 7");
		controller.engineOn();
		controller.on();
		controller.brake();
		controller.on();
		assertTrue("1_1_4_2_3", controller.CRUISING());
	}

	public void test8() throws Exception {
		System.out.println("Test case 8");
		controller.engineOn();
		controller.on();
		controller.accelerator();
		assertTrue("1_1_4_3", controller.STANDBY());
	}

	public void test9() throws Exception {
		System.out.println("Test case 9");
		controller.engineOn();
		controller.on();
		controller.off();
		assertTrue("1_1_4_4", controller.STANDBY());
	}

}
