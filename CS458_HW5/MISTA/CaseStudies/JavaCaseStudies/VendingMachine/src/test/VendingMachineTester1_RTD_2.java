//Test code generated by MISTA

package test;

import vending.Coin;
import vending.VendingMachine;
import org.junit.*;
import static org.junit.Assert.*;

public class VendingMachineTester1_RTD_2 {

	private VendingMachine vendingmachine;
	
	@Before
	public void setUp()  throws Exception {
		vendingmachine = new VendingMachine();
		vendingmachine.setDrink(COFFEE, 35, 0);
		vendingmachine.setDrink(JUICE, 110, 0);
		vendingmachine.setDrink(SODA, 105, 0);
	}
	
	@Test
	public void test1() throws Exception {
		System.out.println("Test case 1");
		vendingmachine.insertCoin(Coin.DOLLAR);
		assertTrue("1_1", vendingmachine.getDeposit()==100);
		assertTrue("1_1", ! (vendingmachine.getDeposit()==0));
		vendingmachine.insertCoin(Coin.QUARTER);
		assertTrue("1_1_1", vendingmachine.getDeposit()==125);
		assertTrue("1_1_1", ! (vendingmachine.getDeposit()==100));
		vendingmachine.purchase(SODA);
		assertTrue("1_1_1_1", vendingmachine.getDeposit()==125);
		assertTrue("1_1_1_1", checkDrink(COFFEE, 35, 0));
		assertTrue("1_1_1_1", checkDrink(JUICE, 110, 0));
		assertTrue("1_1_1_1", checkDrink(SODA, 105, 0));
	}

	@Test
	public void test2() throws Exception {
		System.out.println("Test case 2");
		vendingmachine.insertCoin(Coin.DOLLAR);
		vendingmachine.insertCoin(Coin.QUARTER);
		vendingmachine.returnCoins();
		assertTrue("1_1_1_2", vendingmachine.getDeposit()==0);
		assertTrue("1_1_1_2", ! (vendingmachine.getDeposit()==125));
		vendingmachine.purchase(SODA);
		assertTrue("1_1_1_2_1", vendingmachine.getDeposit()==0);
		assertTrue("1_1_1_2_1", checkDrink(COFFEE, 35, 0));
		assertTrue("1_1_1_2_1", checkDrink(JUICE, 110, 0));
		assertTrue("1_1_1_2_1", checkDrink(SODA, 105, 0));
	}

	@Test
	public void test3() throws Exception {
		System.out.println("Test case 3");
		vendingmachine.insertCoin(Coin.DOLLAR);
		vendingmachine.insertCoin(Coin.QUARTER);
		vendingmachine.returnCoins();
		vendingmachine.returnCoins();
		assertTrue("1_1_1_2_2", vendingmachine.getDeposit()==0);
		assertTrue("1_1_1_2_2", checkDrink(COFFEE, 35, 0));
		assertTrue("1_1_1_2_2", checkDrink(JUICE, 110, 0));
		assertTrue("1_1_1_2_2", checkDrink(SODA, 105, 0));
	}

	@Test
	public void test4() throws Exception {
		System.out.println("Test case 4");
		vendingmachine.insertCoin(Coin.DOLLAR);
		vendingmachine.insertCoin(Coin.QUARTER);
		vendingmachine.returnCoins();
		vendingmachine.purchase(COFFEE);
		assertTrue("1_1_1_2_3", vendingmachine.getDeposit()==0);
		assertTrue("1_1_1_2_3", checkDrink(COFFEE, 35, 0));
		assertTrue("1_1_1_2_3", checkDrink(JUICE, 110, 0));
		assertTrue("1_1_1_2_3", checkDrink(SODA, 105, 0));
	}

	@Test
	public void test5() throws Exception {
		System.out.println("Test case 5");
		vendingmachine.insertCoin(Coin.DOLLAR);
		vendingmachine.insertCoin(Coin.QUARTER);
		vendingmachine.returnCoins();
		vendingmachine.purchase(JUICE);
		assertTrue("1_1_1_2_4", vendingmachine.getDeposit()==0);
		assertTrue("1_1_1_2_4", checkDrink(COFFEE, 35, 0));
		assertTrue("1_1_1_2_4", checkDrink(JUICE, 110, 0));
		assertTrue("1_1_1_2_4", checkDrink(SODA, 105, 0));
	}

	@Test
	public void test6() throws Exception {
		System.out.println("Test case 6");
		vendingmachine.insertCoin(Coin.DOLLAR);
		vendingmachine.insertCoin(Coin.QUARTER);
		vendingmachine.purchase(COFFEE);
		assertTrue("1_1_1_3", vendingmachine.getDeposit()==125);
		assertTrue("1_1_1_3", checkDrink(COFFEE, 35, 0));
		assertTrue("1_1_1_3", checkDrink(JUICE, 110, 0));
		assertTrue("1_1_1_3", checkDrink(SODA, 105, 0));
	}

	@Test
	public void test7() throws Exception {
		System.out.println("Test case 7");
		vendingmachine.insertCoin(Coin.DOLLAR);
		vendingmachine.insertCoin(Coin.QUARTER);
		vendingmachine.purchase(JUICE);
		assertTrue("1_1_1_4", vendingmachine.getDeposit()==125);
		assertTrue("1_1_1_4", checkDrink(COFFEE, 35, 0));
		assertTrue("1_1_1_4", checkDrink(JUICE, 110, 0));
		assertTrue("1_1_1_4", checkDrink(SODA, 105, 0));
	}

	@Test
	public void test8() throws Exception {
		System.out.println("Test case 8");
		vendingmachine.insertCoin(Coin.DOLLAR);
		vendingmachine.purchase(SODA);
		assertTrue("1_1_2", vendingmachine.getDeposit()==100);
		assertTrue("1_1_2", checkDrink(COFFEE, 35, 0));
		assertTrue("1_1_2", checkDrink(JUICE, 110, 0));
		assertTrue("1_1_2", checkDrink(SODA, 105, 0));
	}

	@Test
	public void test9() throws Exception {
		System.out.println("Test case 9");
		vendingmachine.insertCoin(Coin.DOLLAR);
		vendingmachine.returnCoins();
		assertTrue("1_1_3", vendingmachine.getDeposit()==0);
		assertTrue("1_1_3", ! (vendingmachine.getDeposit()==100));
		vendingmachine.insertCoin(Coin.QUARTER);
		assertTrue("1_1_3_1", vendingmachine.getDeposit()==25);
		assertTrue("1_1_3_1", ! (vendingmachine.getDeposit()==0));
		vendingmachine.purchase(SODA);
		assertTrue("1_1_3_1_1", vendingmachine.getDeposit()==25);
		assertTrue("1_1_3_1_1", checkDrink(COFFEE, 35, 0));
		assertTrue("1_1_3_1_1", checkDrink(JUICE, 110, 0));
		assertTrue("1_1_3_1_1", checkDrink(SODA, 105, 0));
	}

	@Test
	public void test10() throws Exception {
		System.out.println("Test case 10");
		vendingmachine.insertCoin(Coin.DOLLAR);
		vendingmachine.returnCoins();
		vendingmachine.insertCoin(Coin.QUARTER);
		vendingmachine.returnCoins();
		assertTrue("1_1_3_1_2", vendingmachine.getDeposit()==0);
		assertTrue("1_1_3_1_2", ! (vendingmachine.getDeposit()==25));
	}

	@Test
	public void test11() throws Exception {
		System.out.println("Test case 11");
		vendingmachine.insertCoin(Coin.DOLLAR);
		vendingmachine.returnCoins();
		vendingmachine.insertCoin(Coin.QUARTER);
		vendingmachine.purchase(COFFEE);
		assertTrue("1_1_3_1_3", vendingmachine.getDeposit()==25);
		assertTrue("1_1_3_1_3", checkDrink(COFFEE, 35, 0));
		assertTrue("1_1_3_1_3", checkDrink(JUICE, 110, 0));
		assertTrue("1_1_3_1_3", checkDrink(SODA, 105, 0));
	}

	@Test
	public void test12() throws Exception {
		System.out.println("Test case 12");
		vendingmachine.insertCoin(Coin.DOLLAR);
		vendingmachine.returnCoins();
		vendingmachine.insertCoin(Coin.QUARTER);
		vendingmachine.purchase(JUICE);
		assertTrue("1_1_3_1_4", vendingmachine.getDeposit()==25);
		assertTrue("1_1_3_1_4", checkDrink(COFFEE, 35, 0));
		assertTrue("1_1_3_1_4", checkDrink(JUICE, 110, 0));
		assertTrue("1_1_3_1_4", checkDrink(SODA, 105, 0));
	}

	@Test
	public void test13() throws Exception {
		System.out.println("Test case 13");
		vendingmachine.insertCoin(Coin.DOLLAR);
		vendingmachine.returnCoins();
		vendingmachine.purchase(SODA);
		assertTrue("1_1_3_2", vendingmachine.getDeposit()==0);
		assertTrue("1_1_3_2", checkDrink(COFFEE, 35, 0));
		assertTrue("1_1_3_2", checkDrink(JUICE, 110, 0));
		assertTrue("1_1_3_2", checkDrink(SODA, 105, 0));
	}

	@Test
	public void test14() throws Exception {
		System.out.println("Test case 14");
		vendingmachine.insertCoin(Coin.DOLLAR);
		vendingmachine.returnCoins();
		vendingmachine.returnCoins();
		assertTrue("1_1_3_3", vendingmachine.getDeposit()==0);
		assertTrue("1_1_3_3", checkDrink(COFFEE, 35, 0));
		assertTrue("1_1_3_3", checkDrink(JUICE, 110, 0));
		assertTrue("1_1_3_3", checkDrink(SODA, 105, 0));
	}

	@Test
	public void test15() throws Exception {
		System.out.println("Test case 15");
		vendingmachine.insertCoin(Coin.DOLLAR);
		vendingmachine.returnCoins();
		vendingmachine.purchase(COFFEE);
		assertTrue("1_1_3_4", vendingmachine.getDeposit()==0);
		assertTrue("1_1_3_4", checkDrink(COFFEE, 35, 0));
		assertTrue("1_1_3_4", checkDrink(JUICE, 110, 0));
		assertTrue("1_1_3_4", checkDrink(SODA, 105, 0));
	}

	@Test
	public void test16() throws Exception {
		System.out.println("Test case 16");
		vendingmachine.insertCoin(Coin.DOLLAR);
		vendingmachine.returnCoins();
		vendingmachine.purchase(JUICE);
		assertTrue("1_1_3_5", vendingmachine.getDeposit()==0);
		assertTrue("1_1_3_5", checkDrink(COFFEE, 35, 0));
		assertTrue("1_1_3_5", checkDrink(JUICE, 110, 0));
		assertTrue("1_1_3_5", checkDrink(SODA, 105, 0));
	}

	@Test
	public void test17() throws Exception {
		System.out.println("Test case 17");
		vendingmachine.insertCoin(Coin.DOLLAR);
		vendingmachine.purchase(COFFEE);
		assertTrue("1_1_4", vendingmachine.getDeposit()==100);
		assertTrue("1_1_4", checkDrink(COFFEE, 35, 0));
		assertTrue("1_1_4", checkDrink(JUICE, 110, 0));
		assertTrue("1_1_4", checkDrink(SODA, 105, 0));
	}

	@Test
	public void test18() throws Exception {
		System.out.println("Test case 18");
		vendingmachine.insertCoin(Coin.DOLLAR);
		vendingmachine.purchase(JUICE);
		assertTrue("1_1_5", vendingmachine.getDeposit()==100);
		assertTrue("1_1_5", checkDrink(COFFEE, 35, 0));
		assertTrue("1_1_5", checkDrink(JUICE, 110, 0));
		assertTrue("1_1_5", checkDrink(SODA, 105, 0));
	}

	@Test
	public void test19() throws Exception {
		System.out.println("Test case 19");
		vendingmachine.insertCoin(Coin.QUARTER);
		assertTrue("1_2", vendingmachine.getDeposit()==25);
		assertTrue("1_2", ! (vendingmachine.getDeposit()==0));
		vendingmachine.insertCoin(Coin.DOLLAR);
		assertTrue("1_2_1", vendingmachine.getDeposit()==125);
		assertTrue("1_2_1", ! (vendingmachine.getDeposit()==25));
	}

	@Test
	public void test20() throws Exception {
		System.out.println("Test case 20");
		vendingmachine.insertCoin(Coin.QUARTER);
		vendingmachine.purchase(SODA);
		assertTrue("1_2_2", vendingmachine.getDeposit()==25);
		assertTrue("1_2_2", checkDrink(COFFEE, 35, 0));
		assertTrue("1_2_2", checkDrink(JUICE, 110, 0));
		assertTrue("1_2_2", checkDrink(SODA, 105, 0));
	}

	@Test
	public void test21() throws Exception {
		System.out.println("Test case 21");
		vendingmachine.insertCoin(Coin.QUARTER);
		vendingmachine.returnCoins();
		assertTrue("1_2_3", vendingmachine.getDeposit()==0);
		assertTrue("1_2_3", ! (vendingmachine.getDeposit()==25));
		vendingmachine.insertCoin(Coin.DOLLAR);
		assertTrue("1_2_3_1", vendingmachine.getDeposit()==100);
		assertTrue("1_2_3_1", ! (vendingmachine.getDeposit()==0));
		vendingmachine.purchase(SODA);
		assertTrue("1_2_3_1_1", vendingmachine.getDeposit()==100);
		assertTrue("1_2_3_1_1", checkDrink(COFFEE, 35, 0));
		assertTrue("1_2_3_1_1", checkDrink(JUICE, 110, 0));
		assertTrue("1_2_3_1_1", checkDrink(SODA, 105, 0));
	}

	@Test
	public void test22() throws Exception {
		System.out.println("Test case 22");
		vendingmachine.insertCoin(Coin.QUARTER);
		vendingmachine.returnCoins();
		vendingmachine.insertCoin(Coin.DOLLAR);
		vendingmachine.returnCoins();
		assertTrue("1_2_3_1_2", vendingmachine.getDeposit()==0);
		assertTrue("1_2_3_1_2", ! (vendingmachine.getDeposit()==100));
	}

	@Test
	public void test23() throws Exception {
		System.out.println("Test case 23");
		vendingmachine.insertCoin(Coin.QUARTER);
		vendingmachine.returnCoins();
		vendingmachine.insertCoin(Coin.DOLLAR);
		vendingmachine.purchase(COFFEE);
		assertTrue("1_2_3_1_3", vendingmachine.getDeposit()==100);
		assertTrue("1_2_3_1_3", checkDrink(COFFEE, 35, 0));
		assertTrue("1_2_3_1_3", checkDrink(JUICE, 110, 0));
		assertTrue("1_2_3_1_3", checkDrink(SODA, 105, 0));
	}

	@Test
	public void test24() throws Exception {
		System.out.println("Test case 24");
		vendingmachine.insertCoin(Coin.QUARTER);
		vendingmachine.returnCoins();
		vendingmachine.insertCoin(Coin.DOLLAR);
		vendingmachine.purchase(JUICE);
		assertTrue("1_2_3_1_4", vendingmachine.getDeposit()==100);
		assertTrue("1_2_3_1_4", checkDrink(COFFEE, 35, 0));
		assertTrue("1_2_3_1_4", checkDrink(JUICE, 110, 0));
		assertTrue("1_2_3_1_4", checkDrink(SODA, 105, 0));
	}

	@Test
	public void test25() throws Exception {
		System.out.println("Test case 25");
		vendingmachine.insertCoin(Coin.QUARTER);
		vendingmachine.returnCoins();
		vendingmachine.purchase(SODA);
		assertTrue("1_2_3_2", vendingmachine.getDeposit()==0);
		assertTrue("1_2_3_2", checkDrink(COFFEE, 35, 0));
		assertTrue("1_2_3_2", checkDrink(JUICE, 110, 0));
		assertTrue("1_2_3_2", checkDrink(SODA, 105, 0));
	}

	@Test
	public void test26() throws Exception {
		System.out.println("Test case 26");
		vendingmachine.insertCoin(Coin.QUARTER);
		vendingmachine.returnCoins();
		vendingmachine.returnCoins();
		assertTrue("1_2_3_3", vendingmachine.getDeposit()==0);
		assertTrue("1_2_3_3", checkDrink(COFFEE, 35, 0));
		assertTrue("1_2_3_3", checkDrink(JUICE, 110, 0));
		assertTrue("1_2_3_3", checkDrink(SODA, 105, 0));
	}

	@Test
	public void test27() throws Exception {
		System.out.println("Test case 27");
		vendingmachine.insertCoin(Coin.QUARTER);
		vendingmachine.returnCoins();
		vendingmachine.purchase(COFFEE);
		assertTrue("1_2_3_4", vendingmachine.getDeposit()==0);
		assertTrue("1_2_3_4", checkDrink(COFFEE, 35, 0));
		assertTrue("1_2_3_4", checkDrink(JUICE, 110, 0));
		assertTrue("1_2_3_4", checkDrink(SODA, 105, 0));
	}

	@Test
	public void test28() throws Exception {
		System.out.println("Test case 28");
		vendingmachine.insertCoin(Coin.QUARTER);
		vendingmachine.returnCoins();
		vendingmachine.purchase(JUICE);
		assertTrue("1_2_3_5", vendingmachine.getDeposit()==0);
		assertTrue("1_2_3_5", checkDrink(COFFEE, 35, 0));
		assertTrue("1_2_3_5", checkDrink(JUICE, 110, 0));
		assertTrue("1_2_3_5", checkDrink(SODA, 105, 0));
	}

	@Test
	public void test29() throws Exception {
		System.out.println("Test case 29");
		vendingmachine.insertCoin(Coin.QUARTER);
		vendingmachine.purchase(COFFEE);
		assertTrue("1_2_4", vendingmachine.getDeposit()==25);
		assertTrue("1_2_4", checkDrink(COFFEE, 35, 0));
		assertTrue("1_2_4", checkDrink(JUICE, 110, 0));
		assertTrue("1_2_4", checkDrink(SODA, 105, 0));
	}

	@Test
	public void test30() throws Exception {
		System.out.println("Test case 30");
		vendingmachine.insertCoin(Coin.QUARTER);
		vendingmachine.purchase(JUICE);
		assertTrue("1_2_5", vendingmachine.getDeposit()==25);
		assertTrue("1_2_5", checkDrink(COFFEE, 35, 0));
		assertTrue("1_2_5", checkDrink(JUICE, 110, 0));
		assertTrue("1_2_5", checkDrink(SODA, 105, 0));
	}

	@Test
	public void test31() throws Exception {
		System.out.println("Test case 31");
		vendingmachine.purchase(SODA);
		assertTrue("1_3", vendingmachine.getDeposit()==0);
		assertTrue("1_3", checkDrink(COFFEE, 35, 0));
		assertTrue("1_3", checkDrink(JUICE, 110, 0));
		assertTrue("1_3", checkDrink(SODA, 105, 0));
	}

	@Test
	public void test32() throws Exception {
		System.out.println("Test case 32");
		vendingmachine.returnCoins();
		assertTrue("1_4", vendingmachine.getDeposit()==0);
		assertTrue("1_4", checkDrink(COFFEE, 35, 0));
		assertTrue("1_4", checkDrink(JUICE, 110, 0));
		assertTrue("1_4", checkDrink(SODA, 105, 0));
	}

	@Test
	public void test33() throws Exception {
		System.out.println("Test case 33");
		vendingmachine.purchase(COFFEE);
		assertTrue("1_5", vendingmachine.getDeposit()==0);
		assertTrue("1_5", checkDrink(COFFEE, 35, 0));
		assertTrue("1_5", checkDrink(JUICE, 110, 0));
		assertTrue("1_5", checkDrink(SODA, 105, 0));
	}

	@Test
	public void test34() throws Exception {
		System.out.println("Test case 34");
		vendingmachine.purchase(JUICE);
		assertTrue("1_6", vendingmachine.getDeposit()==0);
		assertTrue("1_6", checkDrink(COFFEE, 35, 0));
		assertTrue("1_6", checkDrink(JUICE, 110, 0));
		assertTrue("1_6", checkDrink(SODA, 105, 0));
	}


		public static final String COFFEE = VendingMachine.COFFEE; 
		public static final String JUICE = VendingMachine.JUICE; 
		public static final String SODA = VendingMachine.SODA; 
		
		private boolean checkDrink(String drink, int price, int count) {
			if (drink.equalsIgnoreCase(COFFEE)) 
					return vendingmachine.getCoffee().getPrice()==price && vendingmachine.getCoffee().getCount()==count;
			if (drink.equalsIgnoreCase(JUICE)) 
					return vendingmachine.getJuice().getPrice()==price && vendingmachine.getJuice().getCount()==count;
			if (drink.equalsIgnoreCase(SODA)) 
					return vendingmachine.getSoda().getPrice()==price && vendingmachine.getSoda().getCount()==count;
			else
				return true;
		}
	
	
	
}
